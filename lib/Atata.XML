<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atata</name>
    </assembly>
    <members>
        <member name="T:Atata.FindLastAttribute">
            <summary>
            Indicates that a control should use the last occurring element matching the control's definition.
            </summary>
        </member>
        <member name="T:Atata.FindSettingsAttribute">
            <summary>
            Defines the settings to apply for the specified finding strategy of a control.
            </summary>
        </member>
        <member name="P:Atata.FindSettingsAttribute.FindAttributeType">
            <summary>
            Gets the type of the attribute to use for the control finding. Type should be inherited from <see cref="T:Atata.FindAttribute"/>.
            </summary>
        </member>
        <member name="P:Atata.FindSettingsAttribute.Index">
            <summary>
            Gets or sets the index of the control. The default value is -1, meaning that the index is not used.
            </summary>
        </member>
        <member name="P:Atata.FindSettingsAttribute.ScopeSource">
            <summary>
            Gets or sets the scope source. The default value is Parent.
            </summary>
        </member>
        <member name="P:Atata.FindSettingsAttribute.Strategy">
            <summary>
            Gets or sets the strategy type for the control search. Strategy type should implement <see cref="T:Atata.IComponentScopeLocateStrategy"/>. The default value is null, meaning that the default strategy of the specific <see cref="T:Atata.FindAttribute"/> should be used.
            </summary>
        </member>
        <member name="P:Atata.FindSettingsAttribute.Visibility">
            <summary>
            Gets or sets the visibility. The default value is Visible.
            </summary>
        </member>
        <member name="T:Atata.HoverParentAttribute">
            <summary>
            Indicates that the hover on the parent component should occur on the specified event. Be default occurs before any action. Is useful for the drop-down menu item controls.
            </summary>
        </member>
        <member name="T:Atata.InvokeMethodAttribute">
            <summary>
            Defines the method to invoke on the specified event.
            </summary>
        </member>
        <member name="P:Atata.InvokeMethodAttribute.MethodName">
            <summary>
            Gets the name of the method.
            </summary>
        </member>
        <member name="P:Atata.WaitForAttribute.Until">
            <summary>
            Gets the waiting approach.
            </summary>
        </member>
        <member name="P:Atata.WaitForAttribute.ThrowOnPresenceFailure">
            <summary>
            Gets or sets a value indicating whether to throw the exception on the presence (exists or visible) failure. The default value is true.
            </summary>
        </member>
        <member name="P:Atata.WaitForAttribute.ThrowOnAbsenceFailure">
            <summary>
            Gets or sets a value indicating whether to throw the exception on the absence (missing or hidden) failure. The default value is true.
            </summary>
        </member>
        <member name="P:Atata.WaitForAttribute.PresenceTimeout">
            <summary>
            Gets or sets the presence (exists or visible) timeout in seconds. The default value is taken from <c>AtataContext.Current.RetryTimeout.TotalSeconds</c>.
            </summary>
        </member>
        <member name="P:Atata.WaitForAttribute.AbsenceTimeout">
            <summary>
            Gets or sets the absence (missing or hidden) timeout in seconds. The default value is taken from <c>AtataContext.Current.RetryTimeout.TotalSeconds</c>.
            </summary>
        </member>
        <member name="P:Atata.WaitForAttribute.RetryInterval">
            <summary>
            Gets or sets the retry interval. The default value is taken from <c>AtataContext.Current.RetryInterval.TotalSeconds</c>.
            </summary>
        </member>
        <member name="T:Atata.DateTime`1">
            <summary>
            Represents any element containing date and time content. Default search is performed by the label. The default format is "g" (general date/time pattern (short time), e.g. 6/15/2009 1:45 PM).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Time`1">
            <summary>
            Represents any element containing time content. Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Date`1">
            <summary>
            Represents any element containing date content. Default search is performed by the label. The default format is "d" (short date pattern, e.g. 6/15/2009).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Currency`1">
            <summary>
            Represents any element containing currency content. Default search is performed by the label. The default format is "C2" (e.g. $123.45).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Number`1">
            <summary>
            Represents any element containing number content. Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.AtataBuildingContext.TestName">
            <summary>
            Gets or sets the name of the test.
            </summary>
        </member>
        <member name="P:Atata.AtataBuildingContext.BaseUrl">
            <summary>
            Gets or sets the base URL.
            </summary>
        </member>
        <member name="P:Atata.AtataBuildingContext.RetryTimeout">
            <summary>
            Gets the retry timeout. The default value is 10 seconds.
            </summary>
        </member>
        <member name="P:Atata.AtataBuildingContext.RetryInterval">
            <summary>
            Gets the retry interval. The default value is 500 milliseconds.
            </summary>
        </member>
        <member name="M:Atata.AtataContextBuilder.UseDriver(System.Func{OpenQA.Selenium.Remote.RemoteWebDriver})">
            <summary>
            Use custom driver creator function.
            </summary>
            <param name="driverCreator">The builder.</param>
            <returns>The <see cref="T:Atata.FirefoxAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilder.UseLogConsumer``1(``0)">
            <summary>
            Adds the log consumer.
            </summary>
            <typeparam name="TLogConsumer">The type of the log consumer.</typeparam>
            <param name="consumer">The log consumer.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilder.UseScreenshotConsumer``1(``0)">
            <summary>
            Adds the screenshot consumer.
            </summary>
            <typeparam name="TScreenshotConsumer">The type of the screenshot consumer.</typeparam>
            <param name="consumer">The screenshot consumer.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilder.UseTestName(System.String)">
            <summary>
            Sets the name of the test.
            </summary>
            <param name="name">The name of the test.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilder.UseBaseUrl(System.String)">
            <summary>
            Sets the base URL.
            </summary>
            <param name="baseUrl">The base URL.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilder.UseRetryTimeout(System.TimeSpan)">
            <summary>
            Sets the retry timeout for a search of element/control. The default value is 10 seconds.
            </summary>
            <param name="timeout">The retry timeout.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilder.UseRetryInterval(System.TimeSpan)">
            <summary>
            Sets the retry interval for a search of element/control. The default value is 500 milliseconds.
            </summary>
            <param name="interval">The retry interval.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilder.OnCleanUp(System.Action)">
            <summary>
            Adds the action to perform on <see cref="T:Atata.AtataContext"/> clean up.
            </summary>
            <param name="action">The action.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilder.SetUp">
            <summary>
            Sets up the context.
            </summary>
        </member>
        <member name="T:Atata.UIComponentAttributeProvider`1">
            <summary>
            Allows to access the component scope element's attribute values.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.UIComponentAttributeProvider`1.Item(System.String)">
            <summary>
            Gets the <see cref="T:Atata.DataProvider`2"/> instance for the value of the specified control's scope element attribute.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The <see cref="T:Atata.DataProvider`2"/> instance for the attribute's current value.</returns>
        </member>
        <member name="M:Atata.UIComponentAttributeProvider`1.GetValue(System.String)">
            <summary>
            Gets the value of the specified control's scope element attribute.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The attribute's current value. Returns a null if the value is not set.</returns>
        </member>
        <member name="T:Atata.UIComponentCssProvider`1">
            <summary>
            Allows to access the component scope element's CSS property values.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.UIComponentCssProvider`1.Item(System.String)">
            <summary>
            Gets the <see cref="T:Atata.DataProvider`2"/> instance for the value of the specified control's scope element CSS property.
            </summary>
            <param name="propertyName">The name of the CSS property.</param>
            <returns>The <see cref="T:Atata.DataProvider`2"/> instance for the CSS property's current value.</returns>
        </member>
        <member name="M:Atata.UIComponentCssProvider`1.GetValue(System.String)">
            <summary>
            Gets the value of the specified control's scope element CSS property.
            </summary>
            <param name="propertyName">The name of the CSS property.</param>
            <returns>The CSS property's current value.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseChrome(Atata.AtataContextBuilder)">
            <summary>
            Use the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/>.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.ChromeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseFirefox(Atata.AtataContextBuilder)">
            <summary>
            Use the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/>.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.FirefoxAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseInternetExplorer(Atata.AtataContextBuilder)">
            <summary>
            Use the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/>.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.InternetExplorerAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseEdge(Atata.AtataContextBuilder)">
            <summary>
            Use the <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/>.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.EdgeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseOpera(Atata.AtataContextBuilder)">
            <summary>
            Use the <see cref="T:OpenQA.Selenium.Opera.OperaDriver"/>.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.OperaAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UsePhantomJS(Atata.AtataContextBuilder)">
            <summary>
            Use the <see cref="T:OpenQA.Selenium.PhantomJS.PhantomJSDriver"/>.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.PhantomJSAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseSafari(Atata.AtataContextBuilder)">
            <summary>
            Use the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/>.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.SafariAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.WithArguments(Atata.ChromeAtataContextBuilder,System.String[])">
            <summary>
            Adds arguments to be appended to the Chrome.exe command line.
            </summary>
            <param name="builder">The builder.</param>
            <param name="arguments">The arguments.</param>
            <returns>The <see cref="T:Atata.ChromeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.WithArguments(Atata.OperaAtataContextBuilder,System.String[])">
            <summary>
            Adds arguments to be appended to the Opera.exe command line.
            </summary>
            <param name="builder">The builder.</param>
            <param name="arguments">The arguments.</param>
            <returns>The <see cref="T:Atata.OperaAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseNUnitTestName(Atata.AtataContextBuilder)">
            <summary>
            Defines that the name of the test should be taken from the NUnit test.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.LogNUnitError(Atata.AtataContextBuilder)">
            <summary>
            Defines that an error occured during the NUnit test execution should be added to the log upon the clean up.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseTraceLogging(Atata.AtataContextBuilder)">
            <summary>
            Adds the <see cref="T:Atata.TraceLogConsumer"/> instance that uses <see cref="T:System.Diagnostics.Trace"/> class for logging.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseDebugLogging(Atata.AtataContextBuilder)">
            <summary>
            Adds the <see cref="T:Atata.DebugLogConsumer"/> instance that uses <see cref="T:System.Diagnostics.Debug"/> class for logging.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseNUnitTestContextLogging(Atata.AtataContextBuilder)">
            <summary>
            Adds the <see cref="T:Atata.NUnitTestContextLogConsumer"/> instance that uses NUnit.Framework.TestContext class for logging.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseNLogLogging(Atata.AtataContextBuilder,System.String)">
            <summary>
            Adds the <see cref="T:Atata.NLogConsumer"/> instance that uses NLog.Logger class for logging.
            </summary>
            <param name="builder">The builder.</param>
            <param name="loggerName">Name of the logger.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseScreenshotFileSaving(Atata.AtataContextBuilder,System.String)">
            <summary>
            Adds the <see cref="T:Atata.FileScreenshotConsumer"/> instance with the specified folder path.
            </summary>
            <param name="builder">The builder.</param>
            <param name="folderPath">The folder path.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.UseScreenshotFileSaving(Atata.AtataContextBuilder,System.Func{System.String})">
            <summary>
            Adds the <see cref="T:Atata.FileScreenshotConsumer"/> instance with the specified folder path creator.
            </summary>
            <param name="builder">The builder.</param>
            <param name="folderPathCreator">The folder path creator.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.With(Atata.AtataContextBuilder{Atata.FileScreenshotConsumer},System.Drawing.Imaging.ImageFormat)">
            <summary>
            Specifies the image format of the log consumer.
            </summary>
            <param name="builder">The builder.</param>
            <param name="imageFormat">The image format.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.WithoutSectionFinish``1(Atata.AtataContextBuilder{``0})">
            <summary>
            Defines that the logging should not use section-like messages (not "Starting: {action}" and "Finished: {action}", but just "{action}").
            </summary>
            <typeparam name="TTLogConsumer">The type of the log consumer.</typeparam>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.AtataContextBuilderExtensions.WithMinLevel``1(Atata.AtataContextBuilder{``0},Atata.LogLevel)">
            <summary>
            Specifies the minimum level of the log event to write to the log.
            </summary>
            <typeparam name="TTLogConsumer">The type of the log consumer.</typeparam>
            <param name="builder">The builder.</param>
            <param name="level">The level.</param>
            <returns>The <see cref="T:Atata.AtataContextBuilder`1"/> instance.</returns>
        </member>
        <member name="M:Atata.ChromeAtataContextBuilder.WithOptions(System.Func{OpenQA.Selenium.Chrome.ChromeOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsCreator">The options creator.</param>
            <returns>The <see cref="T:Atata.ChromeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.ChromeAtataContextBuilder.WithOptions(System.Action{OpenQA.Selenium.Chrome.ChromeOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsInitializer">The options initializer.</param>
            <returns>The <see cref="T:Atata.ChromeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.ChromeAtataContextBuilder.WithCapability(System.String,System.Object)">
            <summary>
            Adds additional capability to the driver options.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add</param>
            <returns>The <see cref="T:Atata.ChromeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.ChromeAtataContextBuilder.WithDriverService(System.Func{OpenQA.Selenium.Chrome.ChromeDriverService})">
            <summary>
            Specifies the creator function of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/>.
            </summary>
            <param name="driverServiceCreator">The driver service creator function.</param>
            <returns>The <see cref="T:Atata.ChromeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.ChromeAtataContextBuilder.WithDriverPath(System.String)">
            <summary>
            Specifies the directory containing the driver executable file.
            </summary>
            <param name="driverPath">The driver path.</param>
            <returns>The <see cref="T:Atata.ChromeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.ChromeAtataContextBuilder.WithDriverExecutableFileName(System.String)">
            <summary>
            Specifies the name of the driver executable file.
            </summary>
            <param name="driverExecutableFileName">The driver executable file name.</param>
            <returns>The <see cref="T:Atata.ChromeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.ChromeAtataContextBuilder.WithCommandTimeout(System.TimeSpan)">
            <summary>
            Specifies the command timeout (the maximum amount of time to wait for each command).
            </summary>
            <param name="commandTimeout">The command timeout.</param>
            <returns>The <see cref="T:Atata.ChromeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.EdgeAtataContextBuilder.WithOptions(System.Func{OpenQA.Selenium.Edge.EdgeOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsCreator">The options creator.</param>
            <returns>The <see cref="T:Atata.EdgeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.EdgeAtataContextBuilder.WithOptions(System.Action{OpenQA.Selenium.Edge.EdgeOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsInitializer">The options initializer.</param>
            <returns>The <see cref="T:Atata.EdgeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.EdgeAtataContextBuilder.WithCapability(System.String,System.Object)">
            <summary>
            Adds additional capability to the driver options.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add</param>
            <returns>The <see cref="T:Atata.EdgeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.EdgeAtataContextBuilder.WithDriverService(System.Func{OpenQA.Selenium.Edge.EdgeDriverService})">
            <summary>
            Specifies the creator function of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriverService"/>.
            </summary>
            <param name="driverServiceCreator">The driver service creator function.</param>
            <returns>The <see cref="T:Atata.EdgeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.EdgeAtataContextBuilder.WithDriverPath(System.String)">
            <summary>
            Specifies the directory containing the driver executable file.
            </summary>
            <param name="driverPath">The driver path.</param>
            <returns>The <see cref="T:Atata.EdgeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.EdgeAtataContextBuilder.WithDriverExecutableFileName(System.String)">
            <summary>
            Specifies the name of the driver executable file.
            </summary>
            <param name="driverExecutableFileName">The driver executable file name.</param>
            <returns>The <see cref="T:Atata.EdgeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.EdgeAtataContextBuilder.WithCommandTimeout(System.TimeSpan)">
            <summary>
            Specifies the command timeout (the maximum amount of time to wait for each command).
            </summary>
            <param name="commandTimeout">The command timeout.</param>
            <returns>The <see cref="T:Atata.EdgeAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.FirefoxAtataContextBuilder.WithOptions(System.Func{OpenQA.Selenium.Firefox.FirefoxOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsCreator">The options creator.</param>
            <returns>The <see cref="T:Atata.FirefoxAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.FirefoxAtataContextBuilder.WithOptions(System.Action{OpenQA.Selenium.Firefox.FirefoxOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsInitializer">The options initializer.</param>
            <returns>The <see cref="T:Atata.FirefoxAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.FirefoxAtataContextBuilder.WithCapability(System.String,System.Object)">
            <summary>
            Adds additional capability to the driver options.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add</param>
            <returns>The <see cref="T:Atata.FirefoxAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.FirefoxAtataContextBuilder.WithDriverService(System.Func{OpenQA.Selenium.Firefox.FirefoxDriverService})">
            <summary>
            Specifies the creator function of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverService"/>.
            </summary>
            <param name="driverServiceCreator">The driver service creator function.</param>
            <returns>The <see cref="T:Atata.FirefoxAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.FirefoxAtataContextBuilder.WithDriverPath(System.String)">
            <summary>
            Specifies the directory containing the driver executable file.
            </summary>
            <param name="driverPath">The driver path.</param>
            <returns>The <see cref="T:Atata.FirefoxAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.FirefoxAtataContextBuilder.WithDriverExecutableFileName(System.String)">
            <summary>
            Specifies the name of the driver executable file.
            </summary>
            <param name="driverExecutableFileName">The driver executable file name.</param>
            <returns>The <see cref="T:Atata.FirefoxAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.FirefoxAtataContextBuilder.WithCommandTimeout(System.TimeSpan)">
            <summary>
            Specifies the command timeout (the maximum amount of time to wait for each command).
            </summary>
            <param name="commandTimeout">The command timeout.</param>
            <returns>The <see cref="T:Atata.FirefoxAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.InternetExplorerAtataContextBuilder.WithOptions(System.Func{OpenQA.Selenium.IE.InternetExplorerOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsCreator">The options creator.</param>
            <returns>The <see cref="T:Atata.InternetExplorerAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.InternetExplorerAtataContextBuilder.WithOptions(System.Action{OpenQA.Selenium.IE.InternetExplorerOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsInitializer">The options initializer.</param>
            <returns>The <see cref="T:Atata.InternetExplorerAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.InternetExplorerAtataContextBuilder.WithCapability(System.String,System.Object)">
            <summary>
            Adds additional capability to the driver options.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add</param>
            <returns>The <see cref="T:Atata.InternetExplorerAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.InternetExplorerAtataContextBuilder.WithDriverService(System.Func{OpenQA.Selenium.IE.InternetExplorerDriverService})">
            <summary>
            Specifies the creator function of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriverService"/>.
            </summary>
            <param name="driverServiceCreator">The driver service creator function.</param>
            <returns>The <see cref="T:Atata.InternetExplorerAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.InternetExplorerAtataContextBuilder.WithDriverPath(System.String)">
            <summary>
            Specifies the directory containing the driver executable file.
            </summary>
            <param name="driverPath">The driver path.</param>
            <returns>The <see cref="T:Atata.InternetExplorerAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.InternetExplorerAtataContextBuilder.WithDriverExecutableFileName(System.String)">
            <summary>
            Specifies the name of the driver executable file.
            </summary>
            <param name="driverExecutableFileName">The driver executable file name.</param>
            <returns>The <see cref="T:Atata.InternetExplorerAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.InternetExplorerAtataContextBuilder.WithCommandTimeout(System.TimeSpan)">
            <summary>
            Specifies the command timeout (the maximum amount of time to wait for each command).
            </summary>
            <param name="commandTimeout">The command timeout.</param>
            <returns>The <see cref="T:Atata.InternetExplorerAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.OperaAtataContextBuilder.WithOptions(System.Func{OpenQA.Selenium.Opera.OperaOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsCreator">The options creator.</param>
            <returns>The <see cref="T:Atata.OperaAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.OperaAtataContextBuilder.WithOptions(System.Action{OpenQA.Selenium.Opera.OperaOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsInitializer">The options initializer.</param>
            <returns>The <see cref="T:Atata.OperaAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.OperaAtataContextBuilder.WithCapability(System.String,System.Object)">
            <summary>
            Adds additional capability to the driver options.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add</param>
            <returns>The <see cref="T:Atata.OperaAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.OperaAtataContextBuilder.WithDriverService(System.Func{OpenQA.Selenium.Opera.OperaDriverService})">
            <summary>
            Specifies the creator function of the <see cref="T:OpenQA.Selenium.Opera.OperaDriverService"/>.
            </summary>
            <param name="driverServiceCreator">The driver service creator function.</param>
            <returns>The <see cref="T:Atata.OperaAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.OperaAtataContextBuilder.WithDriverPath(System.String)">
            <summary>
            Specifies the directory containing the driver executable file.
            </summary>
            <param name="driverPath">The driver path.</param>
            <returns>The <see cref="T:Atata.OperaAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.OperaAtataContextBuilder.WithDriverExecutableFileName(System.String)">
            <summary>
            Specifies the name of the driver executable file.
            </summary>
            <param name="driverExecutableFileName">The driver executable file name.</param>
            <returns>The <see cref="T:Atata.OperaAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.OperaAtataContextBuilder.WithCommandTimeout(System.TimeSpan)">
            <summary>
            Specifies the command timeout (the maximum amount of time to wait for each command).
            </summary>
            <param name="commandTimeout">The command timeout.</param>
            <returns>The <see cref="T:Atata.OperaAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.PhantomJSAtataContextBuilder.WithOptions(System.Func{OpenQA.Selenium.PhantomJS.PhantomJSOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsCreator">The options creator.</param>
            <returns>The <see cref="T:Atata.PhantomJSAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.PhantomJSAtataContextBuilder.WithOptions(System.Action{OpenQA.Selenium.PhantomJS.PhantomJSOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsInitializer">The options initializer.</param>
            <returns>The <see cref="T:Atata.PhantomJSAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.PhantomJSAtataContextBuilder.WithCapability(System.String,System.Object)">
            <summary>
            Adds additional capability to the driver options.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add</param>
            <returns>The <see cref="T:Atata.PhantomJSAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.PhantomJSAtataContextBuilder.WithDriverService(System.Func{OpenQA.Selenium.PhantomJS.PhantomJSDriverService})">
            <summary>
            Specifies the creator function of the <see cref="T:OpenQA.Selenium.PhantomJS.PhantomJSDriverService"/>.
            </summary>
            <param name="driverServiceCreator">The driver service creator function.</param>
            <returns>The <see cref="T:Atata.PhantomJSAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.PhantomJSAtataContextBuilder.WithDriverPath(System.String)">
            <summary>
            Specifies the directory containing the driver executable file.
            </summary>
            <param name="driverPath">The driver path.</param>
            <returns>The <see cref="T:Atata.PhantomJSAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.PhantomJSAtataContextBuilder.WithDriverExecutableFileName(System.String)">
            <summary>
            Specifies the name of the driver executable file.
            </summary>
            <param name="driverExecutableFileName">The driver executable file name.</param>
            <returns>The <see cref="T:Atata.PhantomJSAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.PhantomJSAtataContextBuilder.WithCommandTimeout(System.TimeSpan)">
            <summary>
            Specifies the command timeout (the maximum amount of time to wait for each command).
            </summary>
            <param name="commandTimeout">The command timeout.</param>
            <returns>The <see cref="T:Atata.PhantomJSAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.SafariAtataContextBuilder.WithOptions(System.Func{OpenQA.Selenium.Safari.SafariOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsCreator">The options creator.</param>
            <returns>The <see cref="T:Atata.SafariAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.SafariAtataContextBuilder.WithOptions(System.Action{OpenQA.Selenium.Safari.SafariOptions})">
            <summary>
            Specifies the driver options.
            </summary>
            <param name="optionsInitializer">The options initializer.</param>
            <returns>The <see cref="T:Atata.SafariAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.SafariAtataContextBuilder.WithCapability(System.String,System.Object)">
            <summary>
            Adds additional capability to the driver options.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add</param>
            <returns>The <see cref="T:Atata.SafariAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.SafariAtataContextBuilder.WithDriverService(System.Func{OpenQA.Selenium.Safari.SafariDriverService})">
            <summary>
            Specifies the creator function of the <see cref="T:OpenQA.Selenium.Safari.SafariDriverService"/>.
            </summary>
            <param name="driverServiceCreator">The driver service creator function.</param>
            <returns>The <see cref="T:Atata.SafariAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.SafariAtataContextBuilder.WithDriverPath(System.String)">
            <summary>
            Specifies the directory containing the driver executable file.
            </summary>
            <param name="driverPath">The driver path.</param>
            <returns>The <see cref="T:Atata.SafariAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.SafariAtataContextBuilder.WithDriverExecutableFileName(System.String)">
            <summary>
            Specifies the name of the driver executable file.
            </summary>
            <param name="driverExecutableFileName">The driver executable file name.</param>
            <returns>The <see cref="T:Atata.SafariAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="M:Atata.SafariAtataContextBuilder.WithCommandTimeout(System.TimeSpan)">
            <summary>
            Specifies the command timeout (the maximum amount of time to wait for each command).
            </summary>
            <param name="commandTimeout">The command timeout.</param>
            <returns>The <see cref="T:Atata.SafariAtataContextBuilder"/> instance.</returns>
        </member>
        <member name="T:Atata.FileScreenshotConsumer">
            <summary>
            Represents the screenshot consumer that saves the screenshot to the file.
            </summary>
            <seealso cref="T:Atata.IScreenshotConsumer" />
        </member>
        <member name="P:Atata.FileScreenshotConsumer.ImageFormat">
            <summary>
            Gets or sets the image format. The default format is Png.
            </summary>
        </member>
        <member name="M:Atata.FileScreenshotConsumer.Take(Atata.ScreenshotInfo)">
            <summary>
            Takes the specified screenshot.
            </summary>
            <param name="screenshotInfo">The screenshot information.</param>
        </member>
        <member name="M:Atata.FileScreenshotConsumer.BuildFileName(Atata.ScreenshotInfo)">
            <summary>
            Builds the name of the file without the extension.
            </summary>
            <param name="screenshotInfo">The screenshot information.</param>
            <returns>The file name without the extension.</returns>
        </member>
        <member name="T:Atata.IScreenshotConsumer">
            <summary>
            Defines the interface for the screenshot consumer.
            </summary>
        </member>
        <member name="M:Atata.IScreenshotConsumer.Take(Atata.ScreenshotInfo)">
            <summary>
            Takes the specified screenshot.
            </summary>
            <param name="screenshotInfo">The screenshot information object.</param>
        </member>
        <member name="T:Atata.ScreenshotInfo">
            <summary>
            Represents the screenshot information. Is used by the classes that implement <see cref="T:Atata.IScreenshotConsumer"/>.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.Screenshot">
            <summary>
            Gets the screenshot.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.Number">
            <summary>
            Gets the number.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.Title">
            <summary>
            Gets the title. Can be null.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.PageObjectName">
            <summary>
            Gets the name of the page object that was shot.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.PageObjectFullName">
            <summary>
            Gets the full name of the page object that was shot.
            </summary>
        </member>
        <member name="T:Atata.LogEventInfo">
            <summary>
            Represents the logging event information raised by Atata framework.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Timestamp">
            <summary>
            Gets the timestamp of the logging event.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Level">
            <summary>
            Gets the level of the logging event.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Message">
            <summary>
            Gets the log message.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Exception">
            <summary>
            Gets the exception information.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.SectionStart">
            <summary>
            Gets the section start information.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.SectionEnd">
            <summary>
            Gets the section end information.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.BuildStart">
            <summary>
            Gets the build start date and time. Contains the same value for all the tests being executed within one build.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.TestName">
            <summary>
            Gets the name of the test.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.TestStart">
            <summary>
            Gets the test start date and time.
            </summary>
        </member>
        <member name="T:Atata.LogLevel">
            <summary>
            Specifies the level of log event.
            </summary>
        </member>
        <member name="T:Atata.LogManager">
            <summary>
            Represents the log manager, the entry point for the Atata logging functionality.
            </summary>
            <seealso cref="T:Atata.ILogManager" />
        </member>
        <member name="M:Atata.LogManager.Use(Atata.ILogConsumer,Atata.LogLevel,System.Boolean)">
            <summary>
            Use the specified consumer for logging.
            </summary>
            <param name="consumer">The log consumer.</param>
            <param name="minLevel">The minimum level of the log message.</param>
            <param name="logSectionFinish">If set to <c>true</c> logs the section finish messages with elapsed time span.</param>
            <returns>
            The same <see cref="T:Atata.LogManager" /> instance.
            </returns>
        </member>
        <member name="M:Atata.LogManager.Use(Atata.IScreenshotConsumer)">
            <summary>
            Use the specified screenshot consumer.
            </summary>
            <param name="consumer">The screenshot consumer.</param>
            <returns>The same <see cref="T:Atata.LogManager"/> instance.</returns>
        </member>
        <member name="M:Atata.LogManager.Start(Atata.LogSection)">
            <summary>
            Starts the specified log section.
            </summary>
            <param name="section">The log section.</param>
            <example>This sample shows how to log the data insertion to some control in the scope of the control.
            <code>
            string value = "new_value";
            Log.Start(new DataAdditionLogSection(this, value));
            // TODO: Add a value to the control.
            Log.EndSection();
            </code>
            </example>
        </member>
        <member name="M:Atata.LogManager.EndSection">
            <summary>
            Ends the latest log section.
            </summary>
        </member>
        <member name="T:Atata.ControlFindingAttribute">
            <summary>
            Specifies the default finding strategy of a control. Can be applied to the control class and assembly.
            </summary>
        </member>
        <member name="P:Atata.ControlFindingAttribute.FindAttributeType">
            <summary>
            Gets the type of the attribute to use for the control finding. Type should be inherited from <see cref="T:Atata.FindAttribute"/>.
            </summary>
        </member>
        <member name="P:Atata.ControlFindingAttribute.ControlType">
            <summary>
            Gets or sets the type of the control (e.g.: typeof(Link&lt;&gt;), typeof(EditableField&lt;,&gt;)).
            </summary>
        </member>
        <member name="P:Atata.ControlFindingAttribute.ParentComponentType">
            <summary>
            Gets or sets the type of the parent component.
            </summary>
        </member>
        <member name="T:Atata.CultureAttribute">
            <summary>
            Specifies the culture of a component.
            </summary>
        </member>
        <member name="P:Atata.CultureAttribute.Value">
            <summary>
            Gets the culture value.
            </summary>
        </member>
        <member name="T:Atata.FindByAttributeAttribute">
            <summary>
            Specifies that a control should be found by the specified attribute. Finds the control that has the specified attribute matching the specified term(s). Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByChildContentAttribute">
            <summary>
            Specifies that a control should be found by the child content text. Finds the control having the child with the specified content. Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="P:Atata.FindByChildContentAttribute.ChildIndex">
            <summary>
            Gets or sets the index of the child element. The default value is 0.
            </summary>
        </member>
        <member name="T:Atata.FindByClassAttribute">
            <summary>
            Specifies that a control should be found by class attribute. Finds the descendant or self control in the scope of the element having the specified class. Uses <c>Kebab</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByColumnHeaderAttribute">
            <summary>
            Specifies that a control should be found within the table column (&lt;td&gt;) that has the header (&lt;th&gt;) matching the specified term(s). Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByColumnIndexAttribute">
            <summary>
            Specifies that a control should be found within the table column (&lt;td&gt;) that has the nth index.
            </summary>
        </member>
        <member name="T:Atata.FindByContentOrValueAttribute">
            <summary>
            Specifies that a control should be found by the content text or value attribute. Finds the control that has the content or value attribute matching the specified term(s). Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByCssAttribute">
            <summary>
            Specifies that a control should be found by CSS selector. Finds the descendant or self control in the scope of the element found by the specified CSS selector.
            </summary>
        </member>
        <member name="P:Atata.FindByCssAttribute.Values">
            <summary>
            Gets the CSS selector values.
            </summary>
        </member>
        <member name="T:Atata.FindByDescriptionTermAttribute">
            <summary>
            Specifies that a control should be found by the description list term element. Finds the descendant control of the &lt;dd&gt; element in the scope of the &lt;dl&gt; element that has the &lt;dt&gt; element matching the specified term(s). Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByFieldSetAttribute">
            <summary>
            Specifies that a control should be found by the parent fieldset element. Finds the descendant control in the scope of the &lt;fieldset&gt; element that has the &lt;legend&gt; element matching the specified term(s). Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByIndexAttribute">
            <summary>
            Specifies that a control should use the nth occurring element matching the control's definition.
            </summary>
        </member>
        <member name="T:Atata.FindByNameAttribute">
            <summary>
            Specifies that a control should be found by name attribute. Finds the descendant or self control in the scope of the element having the specified name. Uses <c>Kebab</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByPlaceholderAttribute">
            <summary>
            Specifies that a control should be found by the placeholder attribute. Finds the control that has the placeholder attribute matching the specified term(s). Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByTitleAttribute">
            <summary>
            Specifies that a control should be found by the title attribute. Finds the control that has the title attribute matching the specified term(s). Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByValueAttribute">
            <summary>
            Specifies that a control should be found by the value attribute. Finds the control that has the value attribute matching the specified term(s). Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByXPathAttribute">
            <summary>
            Specifies that a control should be found by XPath. Finds the descendant or self control in the scope of the element found by the specified XPath.
            </summary>
        </member>
        <member name="P:Atata.FindByXPathAttribute.Values">
            <summary>
            Gets the XPath values.
            </summary>
        </member>
        <member name="T:Atata.FindFirstAttribute">
            <summary>
            Indicates that a control should use the first occurring element matching the control's definition.
            </summary>
        </member>
        <member name="T:Atata.FormatAttribute">
            <summary>
            Specifies the format of a control.
            </summary>
        </member>
        <member name="P:Atata.FormatAttribute.Value">
            <summary>
            Gets the format value.
            </summary>
        </member>
        <member name="T:Atata.ItemsControl`2">
            <summary>
            Represents the items control (a set of any control of TItem type).
            </summary>
            <typeparam name="TItem">The type of the item control.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.ItemsControl`2.Items">
            <summary>
            Gets the items' ControlList.
            </summary>
        </member>
        <member name="T:Atata.TableHeader`1">
            <summary>
            Represents the table header cell control (&lt;th&gt;).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Table`3">
            <summary>
            Represents the table control (&lt;table&gt;). Default search finds the first occurring table.
            </summary>
            <typeparam name="THeader">The type of the table header control.</typeparam>
            <typeparam name="TRow">The type of the table row control.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.Table`3.Rows">
            <summary>
            Gets the rows list.
            </summary>
        </member>
        <member name="P:Atata.Table`3.Headers">
            <summary>
            Gets the headers list.
            </summary>
        </member>
        <member name="T:Atata.PasswordInput`1">
            <summary>
            Represents the password input control (&lt;input type="password"&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.ControlNameExpressionStringBuilder.ExpressionToString(System.Linq.Expressions.Expression)">
            <summary>
            Output a given expression tree to a string.
            </summary>
            <param name="node">The expression node.</param>
            <returns>The string representing the expression.</returns>
        </member>
        <member name="M:Atata.ExpressionStringBuilder.ExpressionToString(System.Linq.Expressions.Expression)">
            <summary>
            Output a given expression tree to a string.
            </summary>
            <param name="node">The expession node.</param>
            <returns>The string representing the expression.</returns>
        </member>
        <member name="M:Atata.INavigableExtensions.ClickAndGo``2(Atata.INavigable{``0,``1})">
            <summary>
            Clicks the control and performs the navigation to the page object of <typeparamref name="TNavigateTo"/> type.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <param name="navigableControl">The navigable control.</param>
            <returns>The instance of <typeparamref name="TNavigateTo"/>.</returns>
        </member>
        <member name="P:Atata.ITermSettings.Case">
            <summary>
            Gets the term case.
            </summary>
        </member>
        <member name="P:Atata.ITermSettings.Match">
            <summary>
            Gets the match.
            </summary>
        </member>
        <member name="P:Atata.ITermSettings.Format">
            <summary>
            Gets the format.
            </summary>
        </member>
        <member name="T:Atata.TermFindSettingsAttribute">
            <summary>
            Defines the term settings to apply for the specified finding strategy of a control.
            </summary>
        </member>
        <member name="P:Atata.TermFindSettingsAttribute.Case">
            <summary>
            Gets or sets the term case.
            </summary>
        </member>
        <member name="P:Atata.TermFindSettingsAttribute.Match">
            <summary>
            Gets or sets the match.
            </summary>
        </member>
        <member name="P:Atata.TermFindSettingsAttribute.Format">
            <summary>
            Gets or sets the format.
            </summary>
        </member>
        <member name="P:Atata.TermFindSettingsAttribute.CutEnding">
            <summary>
            Gets or sets a value indicating whether the name should be cut considering the IgnoreNameEndings property value of <see cref="T:Atata.ControlDefinitionAttribute"/> and <see cref="T:Atata.PageObjectDefinitionAttribute"/>. The default value is true.
            </summary>
        </member>
        <member name="T:Atata.TermFindAttribute">
            <summary>
            Represents the base attribute class for the finding attributes that use terms.
            </summary>
        </member>
        <member name="P:Atata.TermFindAttribute.Values">
            <summary>
            Gets the term values.
            </summary>
        </member>
        <member name="P:Atata.TermFindAttribute.Case">
            <summary>
            Gets the term case.
            </summary>
        </member>
        <member name="P:Atata.TermFindAttribute.Match">
            <summary>
            Gets the match.
            </summary>
        </member>
        <member name="P:Atata.TermFindAttribute.Format">
            <summary>
            Gets or sets the format.
            </summary>
        </member>
        <member name="P:Atata.TermFindAttribute.CutEnding">
            <summary>
            Gets or sets a value indicating whether the name should be cut considering the IgnoreNameEndings property value of <see cref="T:Atata.ControlDefinitionAttribute"/> and <see cref="T:Atata.PageObjectDefinitionAttribute"/>. The default value is true.
            </summary>
        </member>
        <member name="P:Atata.TermFindAttribute.DefaultCase">
            <summary>
            Gets the default term case.
            </summary>
        </member>
        <member name="P:Atata.TermFindAttribute.DefaultMatch">
            <summary>
            Gets the default match. The default value is Equals.
            </summary>
        </member>
        <member name="T:Atata.TermAttribute">
            <summary>
            Specifies the term(s) to use for the control search.
            </summary>
        </member>
        <member name="P:Atata.TermAttribute.Values">
            <summary>
            Gets the term values.
            </summary>
        </member>
        <member name="P:Atata.TermAttribute.CutEnding">
            <summary>
            Gets or sets a value indicating whether the name should be cut considering the IgnoreNameEndings property value of <see cref="T:Atata.ControlDefinitionAttribute"/> and <see cref="T:Atata.PageObjectDefinitionAttribute"/>. The default value is true.
            </summary>
        </member>
        <member name="T:Atata.FindByIdAttribute">
            <summary>
            Specifies that a control should be found by id attribute. Finds the descendant or self control in the scope of the element having the specified id. Uses <c>Kebab</c> as the default term case.
            </summary>
        </member>
        <member name="P:Atata.FindByIdAttribute.DefaultCase">
            <summary>
            Gets the default term case. The default value is <c>TermCase.Kebab</c>.
            </summary>
        </member>
        <member name="P:Atata.TermSettingsAttribute.Match">
            <summary>
            Gets the match.
            </summary>
        </member>
        <member name="P:Atata.TermSettingsAttribute.Case">
            <summary>
            Gets the term case.
            </summary>
        </member>
        <member name="P:Atata.TermSettingsAttribute.Format">
            <summary>
            Gets or sets the format.
            </summary>
        </member>
        <member name="T:Atata.ClickParentAttribute">
            <summary>
            Indicates that the click on the parent component should occur on the specified event. Be default occurs before any action. Is useful for the drop-down button/menu controls.
            </summary>
        </member>
        <member name="T:Atata.CloseAlertBoxAttribute">
            <summary>
            Indicates that the alert box should be closed on the specified event. Be default occurs after the click.
            </summary>
        </member>
        <member name="T:Atata.CloseConfirmBoxAttribute">
            <summary>
            Indicates that the confirm box should be closed on the specified event. Be default occurs after the click. By default accepts the confirm box.
            </summary>
        </member>
        <member name="T:Atata.LogInfoAttribute">
            <summary>
            Defines the information message to be logged on the specified event.
            </summary>
        </member>
        <member name="T:Atata.PressEnterAttribute">
            <summary>
            Indicates that the Enter key should be pressed on the specified event. By default occurs after the set.
            </summary>
        </member>
        <member name="T:Atata.PressTabAttribute">
            <summary>
            Indicates that the Tab key should be pressed on the specified event. By default occurs after the set.
            </summary>
        </member>
        <member name="T:Atata.ScreenshotAttribute">
            <summary>
            Indicates that the screenshot should be captured with an optional title. By default occurs before the click.
            </summary>
        </member>
        <member name="T:Atata.ScrollDownAttribute">
            <summary>
            Indicates that the scroll down should be performed on the specified event. By default occurs before any action.
            </summary>
        </member>
        <member name="T:Atata.ScrollUpAttribute">
            <summary>
            Indicates that the scroll up should be performed on the specified event. By default occurs before any action.
            </summary>
        </member>
        <member name="T:Atata.PressKeysAttribute">
            <summary>
            Defines the keys to press on the specified event. By default occurs after the set.
            </summary>
        </member>
        <member name="T:Atata.TermVerificationTriggerAttribute">
            <summary>
            The base trigger attribute class that can be used in the verification process when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.TriggerAttribute">
            <summary>
            Represents the base attribute class for the triggers.
            </summary>
        </member>
        <member name="P:Atata.TriggerAttribute.On">
            <summary>
            Gets or sets the trigger events.
            </summary>
        </member>
        <member name="P:Atata.TriggerAttribute.Priority">
            <summary>
            Gets or sets the priority. The default value is Medium.
            </summary>
        </member>
        <member name="P:Atata.TriggerAttribute.AppliesTo">
            <summary>
            Gets or sets the scope to apply the trigger to. The default value is Self.
            </summary>
        </member>
        <member name="P:Atata.TriggerAttribute.IsDefinedAtComponentLevel">
            <summary>
            Gets a value indicating whether this trigger is defined at the component level.
            </summary>
        </member>
        <member name="T:Atata.VerifyContentMatchesAttribute">
            <summary>
            Specifies the verification of the page content. Verifies whether the component content matches any of the specified values. By default occurs upon the page object initialization.
            </summary>
        </member>
        <member name="T:Atata.VerifyContentAttribute">
            <summary>
            Specifies the verification of the page content. Verifies whether the component contains the specified content values. By default occurs upon the page object initialization.
            </summary>
        </member>
        <member name="T:Atata.VerifyExistsAttribute">
            <summary>
            Indicates that the component should be verified whether it exists on the specified event. By default occurs upon the page object initialization.
            </summary>
        </member>
        <member name="T:Atata.VerifyH1Attribute">
            <summary>
            Specifies the verification of the &lt;h1&gt; element content. By default occurs upon the page object initialization. If no value is specified, it uses the class name as the expected value with the <c>TermCase.Title</c> casing applied.
            </summary>
        </member>
        <member name="T:Atata.VerifyH2Attribute">
            <summary>
            Specifies the verification of the &lt;h2&gt; element content. By default occurs upon the page object initialization. If no value is specified, it uses the class name as the expected value with the <c>TermCase.Title</c> casing applied.
            </summary>
        </member>
        <member name="T:Atata.VerifyH3Attribute">
            <summary>
            Specifies the verification of the &lt;h3&gt; element content. By default occurs upon the page object initialization. If no value is specified, it uses the class name as the expected value with the <c>TermCase.Title</c> casing applied.
            </summary>
        </member>
        <member name="T:Atata.VerifyH4Attribute">
            <summary>
            Specifies the verification of the &lt;h4&gt; element content. By default occurs upon the page object initialization. If no value is specified, it uses the class name as the expected value with the <c>TermCase.Title</c> casing applied.
            </summary>
        </member>
        <member name="T:Atata.VerifyH5Attribute">
            <summary>
            Specifies the verification of the &lt;h5&gt; element content. By default occurs upon the page object initialization. If no value is specified, it uses the class name as the expected value with the <c>TermCase.Title</c> casing applied.
            </summary>
        </member>
        <member name="T:Atata.VerifyH6Attribute">
            <summary>
            Specifies the verification of the &lt;h6&gt; element content. By default occurs upon the page object initialization. If no value is specified, it uses the class name as the expected value with the <c>TermCase.Title</c> casing applied.
            </summary>
        </member>
        <member name="P:Atata.VerifyHeadingTriggerAttribute.Index">
            <summary>
            Gets or sets the index of header. The default value is -1, meaning that the index is not used.
            </summary>
        </member>
        <member name="T:Atata.VerifyMissingAttribute">
            <summary>
            Indicates that the component should be verified whether it is missing on the specified event. By default occurs upon the page object initialization.
            </summary>
        </member>
        <member name="T:Atata.VerifyTitleAttribute">
            <summary>
            Specifies the verification of the page title. By default occurs upon the page object initialization. If no value is specified, it uses the class name as the expected value with the <c>TermCase.Title</c> casing applied.
            </summary>
        </member>
        <member name="T:Atata.VerifyTitleSettingsAttribute">
            <summary>
            Defines the settings to apply for the <see cref="T:Atata.VerifyTitleAttribute"/> trigger.
            </summary>
        </member>
        <member name="T:Atata.WaitAttribute">
            <summary>
            Specifies the waiting period in seconds. By default occurs after any action.
            </summary>
        </member>
        <member name="T:Atata.WaitForElementAttribute">
            <summary>
            Specifies the waiting for the element. By default occurs after the click.
            </summary>
        </member>
        <member name="M:Atata.WaitForElementAttribute.#ctor(Atata.WaitBy,System.String,Atata.WaitUntil,Atata.TriggerEvents,Atata.TriggerPriority)">
            <summary>
            Initializes a new instance of the <see cref="T:Atata.WaitForElementAttribute" /> class.
            </summary>
            <param name="waitBy">The kind of the element selector to wait for.</param>
            <param name="selector">The selector.</param>
            <param name="until">The waiting approach.</param>
            <param name="on">The trigger events.</param>
            <param name="priority">The priority.</param>
        </member>
        <member name="P:Atata.WaitForElementAttribute.WaitBy">
            <summary>
            Gets the kind of the element selector to wait for.
            </summary>
        </member>
        <member name="P:Atata.WaitForElementAttribute.Selector">
            <summary>
            Gets the selector.
            </summary>
        </member>
        <member name="P:Atata.WaitForElementAttribute.ScopeSource">
            <summary>
            Gets or sets the scope source.
            </summary>
        </member>
        <member name="T:Atata.WaitForJQueryAjaxAttribute">
            <summary>
            Indicates that the waiting should be performed until the jQuery AJAX is completed. By default occurs after the click.
            </summary>
        </member>
        <member name="P:Atata.ControlDefinitionAttribute.Visibility">
            <summary>
            Gets or sets the visibility. The default value is Visible.
            </summary>
        </member>
        <member name="T:Atata.FindAttribute">
            <summary>
            Represents the base attribute class for the finding attributes.
            </summary>
        </member>
        <member name="P:Atata.FindAttribute.Index">
            <summary>
            Gets or sets the index of the control. The default value is -1, meaning that the index is not used.
            </summary>
        </member>
        <member name="P:Atata.FindAttribute.Visibility">
            <summary>
            Gets or sets the visibility. The default value is Visible.
            </summary>
        </member>
        <member name="P:Atata.FindAttribute.ScopeSource">
            <summary>
            Gets or sets the scope source. The default value is Parent.
            </summary>
        </member>
        <member name="P:Atata.FindAttribute.Strategy">
            <summary>
            Gets or sets the strategy type for the control search. Strategy type should implement <see cref="T:Atata.IComponentScopeLocateStrategy"/>. The default value is null, meaning that the default strategy of the specific <see cref="T:Atata.FindAttribute"/> should be used.
            </summary>
        </member>
        <member name="P:Atata.FindAttribute.DefaultStrategy">
            <summary>
            Gets the default strategy type for the control search. Strategy type should implement <see cref="T:Atata.IComponentScopeLocateStrategy"/>.
            </summary>
        </member>
        <member name="T:Atata.FindByContentAttribute">
            <summary>
            Specifies that a control should be found by the content text. Finds the control having the specified content. Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByLabelAttribute">
            <summary>
            Specifies that a control should be found by the label element. Finds the &lt;label&gt; element by the specified term(s), then finds the bound control (for example, by label's "for" attribute referencing the element of the control by id). Uses <c>Title</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FormatSettingsAttribute">
            <summary>
            Defines the format to apply for the specified control.
            </summary>
        </member>
        <member name="P:Atata.FormatSettingsAttribute.ControlType">
            <summary>
            Gets or sets the type of the control (e.g.: typeof(DateInput&lt;&gt;), typeof(TimeInput&lt;&gt;)).
            </summary>
        </member>
        <member name="P:Atata.FormatSettingsAttribute.Value">
            <summary>
            Gets the format value.
            </summary>
        </member>
        <member name="T:Atata.Button`1">
            <summary>
            Represents the button control. Default search is performed by the content and value (button by content text and input by value attribute). Handles any input element with type="button", type="submit", type="reset" or button element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Button`2">
            <summary>
            Represents the button control. Default search is performed by the content and value (button by content text and input by value attribute). Handles any input element with type="button", type="submit", type="reset" or button element.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <seealso cref="T:Atata.Button`1" />
            <seealso cref="T:Atata.INavigable`2" />
        </member>
        <member name="T:Atata.Clickable`2">
            <summary>
            Represents any HTML element. Default search is performed by the id attribute.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Control`1">
            <summary>
            Represents the base class for the controls.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.Control`1.IsEnabled">
            <summary>
            Gets the DataProvider instance for the value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="M:Atata.Control`1.Click">
            <summary>
            Clicks the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="M:Atata.Control`1.Hover">
            <summary>
            Hovers the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="M:Atata.Control`1.Focus">
            <summary>
            Focuses the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="M:Atata.Control`1.DoubleClick">
            <summary>
            Double-clicks the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="M:Atata.Control`1.RightClick">
            <summary>
            Right-clicks the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="T:Atata.ClickableDelegate`1">
            <summary>
            Represents the <see cref="T:Atata.Clickable`1"/> delegate.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.Clickable`1" />
        </member>
        <member name="T:Atata.ClickableDelegate`2">
            <summary>
            Represents the <see cref="T:Atata.Clickable`2"/> delegate.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.Clickable`2" />
        </member>
        <member name="T:Atata.LinkDelegate`1">
            <summary>
            Represents the <see cref="T:Atata.Link`1"/> delegate.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.Link`1" />
        </member>
        <member name="T:Atata.LinkDelegate`2">
            <summary>
            Represents the <see cref="T:Atata.Link`2"/> delegate.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.Link`2" />
        </member>
        <member name="T:Atata.ButtonDelegate`1">
            <summary>
            Represents the <see cref="T:Atata.Button`1"/> delegate.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.Button`1" />
        </member>
        <member name="T:Atata.ButtonDelegate`2">
            <summary>
            Represents the <see cref="T:Atata.Button`2"/> delegate.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the <typeparamref name="TNavigateTo"/> page object.</returns>
            <seealso cref="T:Atata.Button`2" />
        </member>
        <member name="T:Atata.CheckBoxList`2">
            <summary>
            Represents the checkbox list control (a set of &lt;input type="checkbox"&gt;). Default search is performed by the name. Specified checkbox items can be found by label or value. By default finds the items by the label. Use <see cref="T:Atata.FindItemByValueAttribute"/> to find the items by the value.
            </summary>
            <typeparam name="T">The type of the control's data. Supports only enum types currently.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.CheckBoxList`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Atata.CheckBoxList`2"/> class.
            </summary>
            <exception cref="T:System.InvalidOperationException">generic 'T'  parameter is not an Enum type.</exception>
        </member>
        <member name="M:Atata.CheckBoxList`2.Check(`0)">
            <summary>
            Checks the checkbox by specified value.
            </summary>
            <param name="value">The value of the checkbox.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="M:Atata.CheckBoxList`2.Uncheck(`0)">
            <summary>
            Unchecks the checkbox by specified value.
            </summary>
            <param name="value">The value of the checkbox.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.CheckBox`1">
            <summary>
            Represents the checkbox control (&lt;input type="checkbox"&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.CheckBox`1.IsChecked">
            <summary>
            Gets the <see cref="T:Atata.DataProvider`2" /> instance of the checked state value.
            </summary>
        </member>
        <member name="M:Atata.CheckBox`1.Check">
            <summary>
            Checks the control.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="M:Atata.CheckBox`1.Uncheck">
            <summary>
            Unchecks the control.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.Content`2">
            <summary>
            Represents any HTML element containing content. Default search is performed by the label.
            </summary>
            <typeparam name="T">The type of the content.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H1`1">
            <summary>
            Represents the &lt;h1&gt; heading tag. Default search finds the first occurring &lt;h1&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H2`1">
            <summary>
            Represents the &lt;h2&gt; heading tag. Default search finds the first occurring &lt;h2&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H3`1">
            <summary>
            Represents the &lt;h3&gt; heading tag. Default search finds the first occurring &lt;h3&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H4`1">
            <summary>
            Represents the &lt;h4&gt; heading tag. Default search finds the first occurring &lt;h4&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H5`1">
            <summary>
            Represents the &lt;h5&gt; heading tag. Default search finds the first occurring &lt;h5&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H6`1">
            <summary>
            Represents the &lt;h6&gt; heading tag. Default search finds the first occurring &lt;h6&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.DateInput`1">
            <summary>
            Represents the date input control. Default search is performed by the label. The default format is "d" (short date pattern, e.g. 6/15/2009). Handles any input element with type="date", type="text" or without the defined type attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.EditableField`2">
            <summary>
            Represents the base class for the editable field controls.
            </summary>
            <typeparam name="T">The type of the control's data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.RadioButtonList`2">
            <summary>
            Represents the radio button list control (a set of &lt;input type="radio"&gt;). Default search is performed by the name. Specified radio button items can be found by label or value. By default finds the items by the label. Use <see cref="T:Atata.FindItemByValueAttribute"/> to find the items by the value.
            </summary>
            <typeparam name="T">The type of the control's data. Supports string, enum types, numeric types and others.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.RadioButton`1">
            <summary>
            Represents the radio button control (&lt;input type="radio"&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.RadioButton`1.IsChecked">
            <summary>
            Gets the <see cref="T:Atata.DataProvider`2" /> instance of the checked state value.
            </summary>
        </member>
        <member name="M:Atata.RadioButton`1.Check">
            <summary>
            Checks the control.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.Input`2">
            <summary>
            Represents the input control (&lt;input&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="T">The type of the control's data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.Input`2.Append(System.String)">
            <summary>
            Appends the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="M:Atata.Input`2.Clear">
            <summary>
            Clears the value.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.TextArea`1">
            <summary>
            Represents the text area control (&lt;textarea&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.TextArea`1.Append(System.String)">
            <summary>
            Appends the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="M:Atata.TextArea`1.Clear">
            <summary>
            Clears the value.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.TimeInput`1">
            <summary>
            Represents the time input control. Default search is performed by the label. Handles any input element with type="time", type="text" or without the defined type attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Link`1">
            <summary>
            Represents the link control (&lt;a&gt;). Default search is performed by the content.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Link`2">
            <summary>
            Represents the link control (&lt;a&gt;). Default search is performed by the content.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <seealso cref="T:Atata.Link`1" />
        </member>
        <member name="T:Atata.AtataContext">
            <summary>
            Represents the Atata context, the entry point for the test set-up.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.Current">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.BuildStart">
            <summary>
            Gets the build start date and time. Contains the same value for all the tests being executed within one build.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.Driver">
            <summary>
            Gets the driver.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.Log">
            <summary>
            Gets the instance of the log manager.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.TestName">
            <summary>
            Gets the name of the test.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.TestStart">
            <summary>
            Gets the test start date and time.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.BaseUrl">
            <summary>
            Gets the base URL.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.RetryTimeout">
            <summary>
            Gets the retry timeout. The default value is 10 seconds.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.RetryInterval">
            <summary>
            Gets the retry interval. The default value is 500 milliseconds.
            </summary>
        </member>
        <member name="M:Atata.AtataContext.CleanUp(System.Boolean)">
            <summary>
            Cleans up the test context.
            </summary>
            <param name="quitDriver">if set to <c>true</c> quits WebDriver.</param>
        </member>
        <member name="M:Atata.AtataContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Atata.TableRow`1">
            <summary>
            Represents the table row component (&lt;tr&gt;). Default search is performed by the content. By default every its control of type (or inherited from) <see cref="T:Atata.Content`2" /> is searched by the column header.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Table`2">
            <summary>
            Represents the table control (&lt;table&gt;). Default search finds the first occurring table.
            </summary>
            <typeparam name="TRow">The type of the table row control.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Text`1">
            <summary>
            Represents any element containing text content. Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.Go.To``1(``0,System.String,System.Boolean,System.Boolean)">
            <summary>
            Navigates to the specified page object.
            </summary>
            <typeparam name="T">The type of the page object.</typeparam>
            <param name="pageObject">The page object. If set to <c>null</c> creates an instance using the default constructor.</param>
            <param name="url">The URL.</param>
            <param name="navigate">If set to <c>true</c> executes page object navigation functionality.</param>
            <param name="temporarily">If set to <c>true</c> navigates temporarily preserving current page object state.</param>
            <returns>The page object.</returns>
        </member>
        <member name="M:Atata.Go.ToWindow``1(``0,System.String,System.Boolean)">
            <summary>
            Navigates to the window with the specified page object by name.
            </summary>
            <typeparam name="T">The type of the page object.</typeparam>
            <param name="pageObject">The page object. If set to <c>null</c> creates an instance using the default constructor.</param>
            <param name="windowName">Name of the browser window.</param>
            <param name="temporarily">If set to <c>true</c> navigates temporarily preserving current page object state.</param>
            <returns>The page object.</returns>
        </member>
        <member name="M:Atata.Go.ToWindow``1(System.String,System.Boolean)">
            <summary>
            Navigates to the window by name.
            </summary>
            <typeparam name="T">The type of the page object.</typeparam>
            <param name="windowName">Name of the browser window.</param>
            <param name="temporarily">If set to <c>true</c> navigates temporarily preserving current page object state.</param>
            <returns>The page object.</returns>
        </member>
        <member name="M:Atata.Go.ToNextWindow``1(``0,System.Boolean)">
            <summary>
            Navigates to the next window with the specified page object.
            </summary>
            <typeparam name="T">The type of the page object.</typeparam>
            <param name="pageObject">The page object. If set to <c>null</c> creates an instance using the default constructor.</param>
            <param name="temporarily">If set to <c>true</c> navigates temporarily preserving current page object state.</param>
            <returns>The page object.</returns>
        </member>
        <member name="M:Atata.Go.ToPreviousWindow``1(``0,System.Boolean)">
            <summary>
            Navigates to the previous window with the specified page object.
            </summary>
            <typeparam name="T">The type of the page object.</typeparam>
            <param name="pageObject">The page object. If set to <c>null</c> creates an instance using the default constructor.</param>
            <param name="temporarily">If set to <c>true</c> navigates temporarily preserving current page object state.</param>
            <returns>The page object.</returns>
        </member>
        <member name="M:Atata.Go.ToUrl(System.String)">
            <summary>
            Navigates to the specified URL.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="T:Atata.Page`1">
            <summary>
            Represents the whole HTML page and is the main base class to inherit for the pages. Uses the body tag as a scope.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <seealso cref="T:Atata.PageObject`1" />
        </member>
        <member name="T:Atata.PopupWindow`1">
            <summary>
            Represents the base class for the popup window page objects.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.PopupWindow`1.WindowTitleValues">
            <summary>
            Gets or sets the window title values.
            </summary>
        </member>
        <member name="P:Atata.PopupWindow`1.WindowTitleMatch">
            <summary>
            Gets or sets the match that should be used for the window search by the title. The default value is <c>TermMatch.Equals</c>.
            </summary>
        </member>
        <member name="P:Atata.PopupWindow`1.CanFindByWindowTitle">
            <summary>
            Gets a value indicating whether window can be found by window title.
            </summary>
        </member>
        <member name="T:Atata.ScopeSource">
            <summary>
            Specifies the source scope.
            </summary>
        </member>
        <member name="F:Atata.ScopeSource.Parent">
            <summary>
            Uses the parent's scope.
            </summary>
        </member>
        <member name="F:Atata.ScopeSource.Grandparent">
            <summary>
            Uses the grandparent's (the parent of the parent) scope.
            </summary>
        </member>
        <member name="F:Atata.ScopeSource.PageObject">
            <summary>
            Uses the owner page object's scope.
            </summary>
        </member>
        <member name="F:Atata.ScopeSource.Page">
            <summary>
            Uses the page's scope (&lt;body&gt; element).
            </summary>
        </member>
        <member name="T:Atata.Clickable`1">
            <summary>
            Represents any HTML element. Default search is performed by the id attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Select`2">
            <summary>
            Represents the select control (&lt;select&gt;). Property can be marked with <see cref="T:Atata.SelectByValueAttribute"/> or <see cref="T:Atata.SelectByTextAttribute"/>. Default selection is performed by text.
            </summary>
            <typeparam name="T">The type of the data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.UIComponent">
            <summary>
            Represents the base class for UI components.
            </summary>
        </member>
        <member name="P:Atata.UIComponent.Parent">
            <summary>
            Gets the parent component.
            </summary>
        </member>
        <member name="M:Atata.UIComponent.Exists(Atata.SearchOptions)">
            <summary>
            Determines whether the component exists.
            </summary>
            <param name="options">The options. If set to null, then it uses <c>SearchOptions.Safely()</c>.</param>
            <returns>true if the component exists; otherwise, false.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException">The <paramref name="options"/> has IsSafely property equal to false value and the component doesn't exist.</exception>
        </member>
        <member name="M:Atata.UIComponent.Missing(Atata.SearchOptions)">
            <summary>
            Determines whether the component is missing.
            </summary>
            <param name="options">The options. If set to null, then it uses <c>SearchOptions.Safely()</c>.</param>
            <returns>true if the component is missing; otherwise, false.</returns>
            <exception cref="T:Atata.NotMissingElementException">The <paramref name="options"/> has IsSafely property equal to false value and the component exists.</exception>
        </member>
        <member name="T:Atata.UIComponent`1">
            <summary>
            Represents the base class for UI components.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.UIComponent`1.Content">
            <summary>
            Gets the DataProvider instance for the text content.
            </summary>
        </member>
        <member name="P:Atata.UIComponent`1.Should">
            <summary>
            Gets the verification provider that gives a set of verification extension methods.
            </summary>
        </member>
        <member name="P:Atata.UIComponent`1.Attributes">
            <summary>
            Gets the <see cref="T:Atata.UIComponentAttributeProvider`1"/> instance that provides an access to the scope element's attributes.
            </summary>
        </member>
        <member name="P:Atata.UIComponent`1.Css">
            <summary>
            Gets the <see cref="T:Atata.UIComponentCssProvider`1"/> instance that provides an access to the scope element's CSS properties.
            </summary>
        </member>
        <member name="T:Atata.Table`1">
            <summary>
            Represents the table control (&lt;table&gt;). Default search finds the first occurring table.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.NumberInput`1">
            <summary>
            Represents the number input control. Default search is performed by the label. Handles any input element with type="number", type="tel", type="text" or without the defined type attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Field`2">
            <summary>
            Represents the base class for the field controls.
            </summary>
            <typeparam name="T">The type of the control's data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Select`1">
            <summary>
            Represents the select control (&lt;select&gt;). Selects an option using string. Property can be marked with <see cref="T:Atata.SelectByValueAttribute"/> or <see cref="T:Atata.SelectByTextAttribute"/>. Default selection is performed by text.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.PageObject`1">
            <summary>
            Represents the base class for the page objects.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.PageObject`1.PageTitle">
            <summary>
            Gets the DataProvider instance for the title of the current HTML page.
            </summary>
        </member>
        <member name="P:Atata.PageObject`1.PageUrl">
            <summary>
            Gets the DataProvider instance for the URL of the current HTML page.
            </summary>
        </member>
        <member name="M:Atata.PageObject`1.RefreshPage">
            <summary>
            Refreshes the current page.
            </summary>
            <returns>The instance of this page object.</returns>
        </member>
        <member name="M:Atata.PageObject`1.GoBack``1(``0)">
            <summary>
            Navigates back to the previous page.
            </summary>
            <typeparam name="TOther">The type of the page object that represents the previous page.</typeparam>
            <param name="previousPageObject">The instance of the previous page object. If equals null, creates an instance of <typeparamref name="TOther"/> using the default constructor.</param>
            <returns>The instance of the previous page object.</returns>
        </member>
        <member name="M:Atata.PageObject`1.GoForward``1(``0)">
            <summary>
            Navigates forward to the next page.
            </summary>
            <typeparam name="TOther">The type of the page object that represents the next page.</typeparam>
            <param name="nextPageObject">The instance of the next page object. If equals null, creates an instance of <typeparamref name="TOther"/> using the default constructor.</param>
            <returns>The instance of the next page object.</returns>
        </member>
        <member name="M:Atata.PageObject`1.CloseWindow">
            <summary>
            Closes the current window.
            </summary>
        </member>
        <member name="M:Atata.PageObject`1.Wait(System.TimeSpan)">
            <summary>
            Waits the specified time.
            </summary>
            <param name="time">The time to wait.</param>
            <returns>The instance of this page object.</returns>
        </member>
        <member name="M:Atata.PageObject`1.Wait(System.Double)">
            <summary>
            Waits the specified time in seconds.
            </summary>
            <param name="seconds">The time to wait in seconds.</param>
            <returns>The instance of this page object.</returns>
        </member>
        <member name="P:Atata.TermOptions.Match">
            <summary>
            Gets or sets the match.
            </summary>
        </member>
        <member name="P:Atata.TermOptions.Case">
            <summary>
            Gets or sets the term case.
            </summary>
        </member>
        <member name="P:Atata.TermOptions.Format">
            <summary>
            Gets or sets the format.
            </summary>
        </member>
        <member name="T:Atata.TriggerEvents">
            <summary>
            Specifies the trigger events.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.None">
            <summary>
            None of the events.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.Init">
            <summary>
            Occurs upon the page object initialization.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.DeInit">
            <summary>
            Occurs upon the page object de-initialization.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.BeforeGet">
            <summary>
            Occurs before the value is taken from the control.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.AfterGet">
            <summary>
            Occurs after the value is taken from the control.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.BeforeSet">
            <summary>
            Occurs before the value is set to the control.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.AfterSet">
            <summary>
            Occurs after the value is set to the control.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.BeforeClick">
            <summary>
            Occurs before the click on the control.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.AfterClick">
            <summary>
            Occurs after the click on the control.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.BeforeHover">
            <summary>
            Occurs before the hover on the control.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.AfterHover">
            <summary>
            Occurs after the hover on the control.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.BeforeFocus">
            <summary>
            Occurs before the control gets the focus.
            </summary>
        </member>
        <member name="F:Atata.TriggerEvents.AfterFocus">
            <summary>
            Occurs after the control gets the focus.
            </summary>
        </member>
        <member name="T:Atata.TriggerPriority">
            <summary>
            Specifies the priority of the trigger execution.
            </summary>
        </member>
        <member name="F:Atata.TriggerPriority.Highest">
            <summary>
            The highest priority.
            </summary>
        </member>
        <member name="F:Atata.TriggerPriority.Higher">
            <summary>
            The higher priority.
            </summary>
        </member>
        <member name="F:Atata.TriggerPriority.High">
            <summary>
            The high priority.
            </summary>
        </member>
        <member name="F:Atata.TriggerPriority.Medium">
            <summary>
            The medium priority.
            </summary>
        </member>
        <member name="F:Atata.TriggerPriority.Low">
            <summary>
            The low priority.
            </summary>
        </member>
        <member name="F:Atata.TriggerPriority.Lower">
            <summary>
            The lower priority.
            </summary>
        </member>
        <member name="F:Atata.TriggerPriority.Lowest">
            <summary>
            The lowest priority.
            </summary>
        </member>
        <member name="T:Atata.TriggerScope">
            <summary>
            Specifies the scope of the trigger application.
            </summary>
        </member>
        <member name="F:Atata.TriggerScope.Self">
            <summary>
            Indicates that the trigger applies to the class/member declared.
            </summary>
        </member>
        <member name="F:Atata.TriggerScope.Children">
            <summary>
            Indicates that the trigger applies to the child control properties.
            </summary>
        </member>
        <member name="T:Atata.TermCase">
            <summary>
            Specifies the term case.
            </summary>
        </member>
        <member name="F:Atata.TermCase.None">
            <summary>
            Doesn't apply the case.
            </summary>
        </member>
        <member name="F:Atata.TermCase.Title">
            <summary>
            Uses title case (e.g. "Some Term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Sentence">
            <summary>
            Uses sentence case (e.g. "Some term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.MidSentence">
            <summary>
            Uses mid-sentence case where the first word is not capitalised (e.g. "some term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Lower">
            <summary>
            Uses lower case (e.g. "some term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.LowerMerged">
            <summary>
            Uses lower case with words merging (e.g. "someterm").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Upper">
            <summary>
            Uses upper case (e.g. "SOME TERM").
            </summary>
        </member>
        <member name="F:Atata.TermCase.UpperMerged">
            <summary>
            Uses upper case with words merging (e.g. "SOMETERM").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Camel">
            <summary>
            Uses camel case (e.g. "someTerm").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Pascal">
            <summary>
            Uses pascal case (e.g. "SomeTerm").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Kebab">
            <summary>
            Uses dash ('-') and lower case (e.g. "some-term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.HyphenKebab">
            <summary>
            Uses hyphen ('‐') and lower case (e.g. "some‐term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.PascalKebab">
            <summary>
            Uses dash ('-') and pascal case (e.g. "Some-Term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.PascalHyphenKebab">
            <summary>
            Uses hyphen ('‐') and pascal case (e.g. "Some‐Term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Snake">
            <summary>
            Uses undersore ('_') and lower case (e.g. "some_term").
            </summary>
        </member>
        <member name="T:Atata.TermMatch">
            <summary>
            Specifies the match approach for the term finding.
            </summary>
        </member>
        <member name="F:Atata.TermMatch.Equals">
            <summary>
            Checks whether the text equals the specified term.
            </summary>
        </member>
        <member name="F:Atata.TermMatch.Contains">
            <summary>
            Checks whether the text contains the specified term.
            </summary>
        </member>
        <member name="F:Atata.TermMatch.StartsWith">
            <summary>
            Checks whether the text starts with the specified term.
            </summary>
        </member>
        <member name="F:Atata.TermMatch.EndsWith">
            <summary>
            Checks whether the text ends with the specified term.
            </summary>
        </member>
        <member name="T:Atata.TextInput`1">
            <summary>
            Represents the text input control (&lt;input type="text"&gt;). Default search is performed by the label. Handles any input element with type="text" or without the defined type attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.WaitBy">
            <summary>
            Specifies the kind of the element selector for the waiting.
            </summary>
        </member>
        <member name="F:Atata.WaitBy.Id">
            <summary>
            Uses the id selector kind.
            </summary>
        </member>
        <member name="F:Atata.WaitBy.Name">
            <summary>
            Uses the name selector kind.
            </summary>
        </member>
        <member name="F:Atata.WaitBy.Class">
            <summary>
            Uses the class selector kind.
            </summary>
        </member>
        <member name="F:Atata.WaitBy.Css">
            <summary>
            Uses the CSS selector kind.
            </summary>
        </member>
        <member name="F:Atata.WaitBy.XPath">
            <summary>
            Uses the XPath selector kind.
            </summary>
        </member>
        <member name="T:Atata.WaitUntil">
            <summary>
            Specifies the waiting approach.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.Missing">
            <summary>
            Waits until the element will be missing.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.Hidden">
            <summary>
            Waits until the element will be hidden.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.MissingOrHidden">
            <summary>
            Waits until the element will be missing or hidden.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.Visible">
            <summary>
            Waits until the element will be visible.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.VisibleOrHidden">
            <summary>
            Waits until the element will be visible or hidden.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.VisibleThenHidden">
            <summary>
            Waits until the element will be visible and then until it will be hidden.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.VisibleThenMissing">
            <summary>
            Waits until the element will be visible and then until it will be missing.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.VisibleThenMissingOrHidden">
            <summary>
            Waits until the element will be visible and then until it will be missing or hidden.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.MissingThenVisible">
            <summary>
            Waits until the element will be missing and then until it will be visible.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.HiddenThenVisible">
            <summary>
            Waits until the element will be hidden and then until it will be visible.
            </summary>
        </member>
        <member name="F:Atata.WaitUntil.MissingOrHiddenThenVisible">
            <summary>
            Waits until the element will be missing or hidden and then until it will be visible.
            </summary>
        </member>
    </members>
</doc>
