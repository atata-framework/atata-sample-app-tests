<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atata</name>
    </assembly>
    <members>
        <member name="T:Atata.UIComponentAttributeProvider">
            <summary>
            Allows to access the component scope element attribute values.
            </summary>
        </member>
        <member name="P:Atata.UIComponentAttributeProvider.Item(System.String)">
            <summary>
            Gets the value of the specified attribute for the control's scope element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The attribute's current value. Returns a null if the value is not set.</returns>
        </member>
        <member name="T:Atata.UIComponentCssProvider">
            <summary>
            Allows to access the component scope element CSS property values.
            </summary>
        </member>
        <member name="P:Atata.UIComponentCssProvider.Item(System.String)">
            <summary>
            Gets the value of the specified CSS property for the control's scope element.
            </summary>
            <param name="propertyName">The name of the CSS property.</param>
            <returns>The value of the specified CSS property.</returns>
        </member>
        <member name="T:Atata.FileScreenshotConsumer">
            <summary>
            Represents the screenshot consumer that saves the screenshot to the file.
            </summary>
            <seealso cref="T:Atata.IScreenshotConsumer" />
        </member>
        <member name="P:Atata.FileScreenshotConsumer.ImageFormat">
            <summary>
            Gets or sets the image format. The default format is Png.
            </summary>
        </member>
        <member name="M:Atata.FileScreenshotConsumer.Take(Atata.ScreenshotInfo)">
            <summary>
            Takes the specified screenshot.
            </summary>
            <param name="screenshotInfo">The screenshot information.</param>
        </member>
        <member name="M:Atata.FileScreenshotConsumer.BuildFileName(Atata.ScreenshotInfo)">
            <summary>
            Builds the name of the file without extension.
            </summary>
            <param name="screenshotInfo">The screenshot information.</param>
            <returns></returns>
        </member>
        <member name="T:Atata.IScreenshotConsumer">
            <summary>
            Defines the interface for the screenshot consumer.
            </summary>
        </member>
        <member name="M:Atata.IScreenshotConsumer.Take(Atata.ScreenshotInfo)">
            <summary>
            Takes the specified screenshot.
            </summary>
            <param name="screenshotInfo">The screenshot information object.</param>
        </member>
        <member name="T:Atata.ScreenshotInfo">
            <summary>
            Represents the screenshot information. Is used by the classes that implement <see cref="T:Atata.IScreenshotConsumer"/>.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.Screenshot">
            <summary>
            Gets the screenshot.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.Number">
            <summary>
            Gets the number.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.Title">
            <summary>
            Gets the title. Can be null.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.PageObjectName">
            <summary>
            Gets the name of the page object that was shot.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.PageObjectFullName">
            <summary>
            Gets the full name of the page object that was shot.
            </summary>
        </member>
        <member name="T:Atata.LogEventInfo">
            <summary>
            Represents the logging event information raised by Atata framework.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Timestamp">
            <summary>
            Gets the timestamp of the logging event.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Level">
            <summary>
            Gets the level of the logging event.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Message">
            <summary>
            Gets the log message.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Exception">
            <summary>
            Gets the exception information.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.SectionStart">
            <summary>
            Gets the section start information.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.SectionEnd">
            <summary>
            Gets the section end information.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.BuildStart">
            <summary>
            Gets the build start date and time. Contains the same value for all the tests being executed within one build.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.TestName">
            <summary>
            Gets the name of the test.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.TestStart">
            <summary>
            Gets the test start date and time.
            </summary>
        </member>
        <member name="T:Atata.LogLevel">
            <summary>
            Specifies the level of log event.
            </summary>
        </member>
        <member name="T:Atata.LogManager">
            <summary>
            Represents the log manager, the entry point for the Atata logging functionality.
            </summary>
            <seealso cref="T:Atata.ILogManager" />
        </member>
        <member name="M:Atata.LogManager.Use(Atata.ILogConsumer)">
            <summary>
            Use the specified consumer for logging.
            </summary>
            <param name="consumer">The log consumer.</param>
            <returns></returns>
        </member>
        <member name="M:Atata.LogManager.Use(Atata.IScreenshotConsumer)">
            <summary>
            Use the specified screenshot consumer.
            </summary>
            <param name="consumer">The screenshot consumer.</param>
            <returns></returns>
        </member>
        <member name="M:Atata.LogManager.Start(Atata.LogSection)">
            <summary>
            Starts the specified log section.
            </summary>
            <param name="section">The log section.</param>
            <example>This sample shows how to log the data insertion to some control in the scope of the control.
            <code>
            string value = "new_value";
            Log.Start(new DataAdditionLogSection(this, value));
            // TODO: Add a value to the control.
            Log.EndSection();
            </code>
            </example>
        </member>
        <member name="M:Atata.LogManager.EndSection">
            <summary>
            Ends the latest log section.
            </summary>
        </member>
        <member name="T:Atata.ItemsControl`2">
            <summary>
            Represents the items control (a set of any control of TItem type).
            </summary>
            <typeparam name="TItem">The type of the item control.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.ItemsControl`2.Items">
            <summary>
            Gets the items' ControlList.
            </summary>
        </member>
        <member name="T:Atata.TableHeader`1">
            <summary>
            Represents the table header cell control (&lt;th&gt;).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.PasswordInput`1">
            <summary>
            Represents the password input control (&lt;input type="password"&gt;).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.ControlNameExpressionStringBuilder.ExpressionToString(System.Linq.Expressions.Expression)">
            <summary>
            Output a given expression tree to a string.
            </summary>
        </member>
        <member name="M:Atata.ExpressionStringBuilder.ExpressionToString(System.Linq.Expressions.Expression)">
            <summary>
            Output a given expression tree to a string.
            </summary>
        </member>
        <member name="T:Atata.TermVerificationTriggerAttribute">
            <summary>
            The base trigger attribute class that can be used in the verification process when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH1Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h1&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH2Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h2&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH3Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h3&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH4Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h4&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH5Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h5&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH6Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h6&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="P:Atata.VerifyHeadingTriggerAttribute.Index">
            <summary>
            Gets or sets the index of header. The default value is -1, meaning that the index is not used.
            </summary>
        </member>
        <member name="T:Atata.VerifyTitleAttribute">
            <summary>
            Indicates the verification of the page title when the page object is initialized.
            </summary>
        </member>
        <member name="P:Atata.FindAttribute.Index">
            <summary>
            Gets or sets the index of the control. The default value is -1, meaning that the index is not used.
            </summary>
        </member>
        <member name="T:Atata.CheckBoxList`2">
            <summary>
            Represents the checkbox list control (a set of &lt;input type="checkbox"&gt;).
            </summary>
            <typeparam name="T">The type of the control's data. Supports only enum types currently.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.CheckBoxList`2.#ctor">
            <summary>
            Initializes a new instance of the Atata.CheckBoxList`2 class.
            </summary>
            <exception cref="T:System.InvalidOperationException">generic 'T'  parameter is not a Enum type.</exception>
        </member>
        <member name="M:Atata.CheckBoxList`2.Check(`0)">
            <summary>
            Checks the checkbox by specifed value.
            </summary>
            <param name="value">The value of the checkbox.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="M:Atata.CheckBoxList`2.Uncheck(`0)">
            <summary>
            Unchecks the checkbox by specifed value.
            </summary>
            <param name="value">The value of the checkbox.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.CheckBox`1">
            <summary>
            Represents the checkbox control (&lt;input type="checkbox"&gt;).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.CheckBox`1.Check">
            <summary>
            Checks the control.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="M:Atata.CheckBox`1.Uncheck">
            <summary>
            Unchecks the control.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.Content`2">
            <summary>
            Represents any element containing content.
            </summary>
            <typeparam name="T">The type of the content.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H1`1">
            <summary>
            Represents the &lt;h1&gt; heading tag.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H2`1">
            <summary>
            Represents the &lt;h2&gt; heading tag.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H3`1">
            <summary>
            Represents the &lt;h3&gt; heading tag.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H4`1">
            <summary>
            Represents the &lt;h4&gt; heading tag.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H5`1">
            <summary>
            Represents the &lt;h5&gt; heading tag.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H6`1">
            <summary>
            Represents the &lt;h6&gt; heading tag.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.DateInput`1">
            <summary>
            Represents the date input control.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.EditableField`2">
            <summary>
            Represents the base class for the editable field controls.
            </summary>
            <typeparam name="T">The type of the control's data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.RadioButtonList`2">
            <summary>
            Represents the radio button list control (a set of &lt;input type="radio"&gt;).
            </summary>
            <typeparam name="T">The type of the control's data. Supports string, enum types, numeric types and others.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.RadioButton`1">
            <summary>
            Represents the radio button control (&lt;input type="radio"&gt;).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Input`2">
            <summary>
            Represents the input control.
            </summary>
            <typeparam name="T">The type of the control's data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.Input`2.Append(System.String)">
            <summary>
            Appends the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.TimeInput`1">
            <summary>
            Represents the time input control.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.ATContext">
            <summary>
            Represents the Atata context, the entry point for the test set-up.
            </summary>
        </member>
        <member name="P:Atata.ATContext.BuildStart">
            <summary>
            Gets the build start date and time. Contains the same value for all the tests being executed within one build.
            </summary>
        </member>
        <member name="P:Atata.ATContext.Driver">
            <summary>
            Gets the driver.
            </summary>
        </member>
        <member name="P:Atata.ATContext.Log">
            <summary>
            Gets the instance of the log manager.
            </summary>
        </member>
        <member name="P:Atata.ATContext.TestName">
            <summary>
            Gets the name of the test.
            </summary>
        </member>
        <member name="P:Atata.ATContext.TestStart">
            <summary>
            Gets the test start date and time.
            </summary>
        </member>
        <member name="P:Atata.ATContext.Current">
            <summary>
            Gets the current test context.
            </summary>
        </member>
        <member name="M:Atata.ATContext.CleanUp">
            <summary>
            Cleans up current test context.
            </summary>
        </member>
        <member name="T:Atata.Text`1">
            <summary>
            Represents any element containing text content.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.UIComponent.Attributes">
            <summary>
            Gets the scope element's attributes.
            </summary>
        </member>
        <member name="P:Atata.UIComponent.Css">
            <summary>
            Gets the scope element's CSS properties.
            </summary>
        </member>
        <member name="T:Atata.NumberInput`1">
            <summary>
            Represents the number input control.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Field`2">
            <summary>
            Represents the base class for the field controls.
            </summary>
            <typeparam name="T">The type of the control's data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.TriggerPriority">
            <summary>
            Specifies the priority of trigger execution.
            </summary>
        </member>
        <member name="T:Atata.TriggerScope">
            <summary>
            Specifies the scope of trigger application.
            </summary>
        </member>
        <member name="F:Atata.TriggerScope.Self">
            <summary>
            Indicates that the trigger applies to the class/member declared.
            </summary>
        </member>
        <member name="F:Atata.TriggerScope.Children">
            <summary>
            Indicates that the trigger applies to the child control properties.
            </summary>
        </member>
        <member name="T:Atata.TermCase">
            <summary>
            Specifies the term case.
            </summary>
        </member>
        <member name="F:Atata.TermCase.Inherit">
            <summary>
            Uses inherited case or none if missing.
            </summary>
        </member>
        <member name="F:Atata.TermCase.None">
            <summary>
            Doesn't apply case.
            </summary>
        </member>
        <member name="F:Atata.TermCase.Title">
            <summary>
            Uses title case (e.g. "Some Term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.TitleWithColon">
            <summary>
            Uses title case with colon (':') ending (e.g. "Some Term:").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Sentence">
            <summary>
            Uses sentence case (e.g. "Some term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.MidSentence">
            <summary>
            Uses mid-sentence case where first word not capitalised (e.g. "some term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.SentenceWithColon">
            <summary>
            Uses sentence case with colon (':') ending (e.g. "Some term:").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Lower">
            <summary>
            Uses lower case (e.g. "some term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.LowerMerged">
            <summary>
            Uses lower case with words merging (e.g. "someterm").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Upper">
            <summary>
            Uses upper case (e.g. "SOME TERM").
            </summary>
        </member>
        <member name="F:Atata.TermCase.UpperMerged">
            <summary>
            Uses upper case with words merging (e.g. "SOMETERM").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Camel">
            <summary>
            Uses camel case (e.g. "someTerm").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Pascal">
            <summary>
            Uses pascal case (e.g. "SomeTerm").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Kebab">
            <summary>
            Uses dash ('-') and lower case (e.g. "some-term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.HyphenKebab">
            <summary>
            Uses hyphen ('‐') and lower case (e.g. "some‐term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.PascalKebab">
            <summary>
            Uses dash ('-') and pascal case (e.g. "Some-Term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.PascalHyphenKebab">
            <summary>
            Uses hyphen ('‐') and pascal case (e.g. "Some‐Term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.XKebab">
            <summary>
            Uses dash ('-'), lower case and "x-" prefix (e.g. "x-some-term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Snake">
            <summary>
            Uses undersore ('_') and lower case (e.g. "some_term").
            </summary>
        </member>
        <member name="T:Atata.TermMatch">
            <summary>
            Specifies the match approach for the term finding.
            </summary>
        </member>
        <member name="F:Atata.TermMatch.Inherit">
            <summary>
            Uses inherited match or none if missing.
            </summary>
        </member>
        <member name="T:Atata.TextInput`1">
            <summary>
            Represents the text input control (&lt;input type="text"&gt;).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
    </members>
</doc>
