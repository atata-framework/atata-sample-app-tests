<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atata</name>
    </assembly>
    <members>
        <member name="T:Atata.Number`1">
            <summary>
            Represents any element containing number content. Default search is performed by the label (if is declared in the class inherited from `TableRow`, then by column header).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.UIComponentAttributeProvider">
            <summary>
            Allows to access the component scope element attribute values.
            </summary>
        </member>
        <member name="P:Atata.UIComponentAttributeProvider.Item(System.String)">
            <summary>
            Gets the value of the specified attribute for the control's scope element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The attribute's current value. Returns a null if the value is not set.</returns>
        </member>
        <member name="T:Atata.UIComponentCssProvider">
            <summary>
            Allows to access the component scope element CSS property values.
            </summary>
        </member>
        <member name="P:Atata.UIComponentCssProvider.Item(System.String)">
            <summary>
            Gets the value of the specified CSS property for the control's scope element.
            </summary>
            <param name="propertyName">The name of the CSS property.</param>
            <returns>The value of the specified CSS property.</returns>
        </member>
        <member name="T:Atata.FileScreenshotConsumer">
            <summary>
            Represents the screenshot consumer that saves the screenshot to the file.
            </summary>
            <seealso cref="T:Atata.IScreenshotConsumer" />
        </member>
        <member name="P:Atata.FileScreenshotConsumer.ImageFormat">
            <summary>
            Gets or sets the image format. The default format is Png.
            </summary>
        </member>
        <member name="M:Atata.FileScreenshotConsumer.Take(Atata.ScreenshotInfo)">
            <summary>
            Takes the specified screenshot.
            </summary>
            <param name="screenshotInfo">The screenshot information.</param>
        </member>
        <member name="M:Atata.FileScreenshotConsumer.BuildFileName(Atata.ScreenshotInfo)">
            <summary>
            Builds the name of the file without the extension.
            </summary>
            <param name="screenshotInfo">The screenshot information.</param>
            <returns>The file name without the extension.</returns>
        </member>
        <member name="T:Atata.IScreenshotConsumer">
            <summary>
            Defines the interface for the screenshot consumer.
            </summary>
        </member>
        <member name="M:Atata.IScreenshotConsumer.Take(Atata.ScreenshotInfo)">
            <summary>
            Takes the specified screenshot.
            </summary>
            <param name="screenshotInfo">The screenshot information object.</param>
        </member>
        <member name="T:Atata.ScreenshotInfo">
            <summary>
            Represents the screenshot information. Is used by the classes that implement <see cref="T:Atata.IScreenshotConsumer"/>.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.Screenshot">
            <summary>
            Gets the screenshot.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.Number">
            <summary>
            Gets the number.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.Title">
            <summary>
            Gets the title. Can be null.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.PageObjectName">
            <summary>
            Gets the name of the page object that was shot.
            </summary>
        </member>
        <member name="P:Atata.ScreenshotInfo.PageObjectFullName">
            <summary>
            Gets the full name of the page object that was shot.
            </summary>
        </member>
        <member name="T:Atata.LogEventInfo">
            <summary>
            Represents the logging event information raised by Atata framework.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Timestamp">
            <summary>
            Gets the timestamp of the logging event.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Level">
            <summary>
            Gets the level of the logging event.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Message">
            <summary>
            Gets the log message.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.Exception">
            <summary>
            Gets the exception information.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.SectionStart">
            <summary>
            Gets the section start information.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.SectionEnd">
            <summary>
            Gets the section end information.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.BuildStart">
            <summary>
            Gets the build start date and time. Contains the same value for all the tests being executed within one build.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.TestName">
            <summary>
            Gets the name of the test.
            </summary>
        </member>
        <member name="P:Atata.LogEventInfo.TestStart">
            <summary>
            Gets the test start date and time.
            </summary>
        </member>
        <member name="T:Atata.LogLevel">
            <summary>
            Specifies the level of log event.
            </summary>
        </member>
        <member name="T:Atata.LogManager">
            <summary>
            Represents the log manager, the entry point for the Atata logging functionality.
            </summary>
            <seealso cref="T:Atata.ILogManager" />
        </member>
        <member name="M:Atata.LogManager.Use(Atata.ILogConsumer,Atata.LogLevel,System.Boolean)">
            <summary>
            Use the specified consumer for logging.
            </summary>
            <param name="consumer">The log consumer.</param>
            <param name="minLevel">The minimum level of the log message.</param>
            <param name="logSectionFinish">If set to <c>true</c> logs the section finish messages with elapsed time span.</param>
            <returns>
            The same <see cref="T:Atata.LogManager" /> instance.
            </returns>
        </member>
        <member name="M:Atata.LogManager.Use(Atata.IScreenshotConsumer)">
            <summary>
            Use the specified screenshot consumer.
            </summary>
            <param name="consumer">The screenshot consumer.</param>
            <returns>The same <see cref="T:Atata.LogManager"/> instance.</returns>
        </member>
        <member name="M:Atata.LogManager.Start(Atata.LogSection)">
            <summary>
            Starts the specified log section.
            </summary>
            <param name="section">The log section.</param>
            <example>This sample shows how to log the data insertion to some control in the scope of the control.
            <code>
            string value = "new_value";
            Log.Start(new DataAdditionLogSection(this, value));
            // TODO: Add a value to the control.
            Log.EndSection();
            </code>
            </example>
        </member>
        <member name="M:Atata.LogManager.EndSection">
            <summary>
            Ends the latest log section.
            </summary>
        </member>
        <member name="T:Atata.FindByClassAttribute">
            <summary>
            Specifies that a control should be found by class attribute. Finds the descendant or self control in the scope of the element having the specified class. Uses <c>Kebab</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.FindByNameAttribute">
            <summary>
            Specifies that a control should be found by name attribute. Finds the descendant or self control in the scope of the element having the specified name. Uses <c>Kebab</c> as the default term case.
            </summary>
        </member>
        <member name="T:Atata.ItemsControl`2">
            <summary>
            Represents the items control (a set of any control of TItem type).
            </summary>
            <typeparam name="TItem">The type of the item control.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.ItemsControl`2.Items">
            <summary>
            Gets the items' ControlList.
            </summary>
        </member>
        <member name="T:Atata.TableHeader`1">
            <summary>
            Represents the table header cell control (&lt;th&gt;).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Table`3">
            <summary>
            Represents the table control (&lt;table&gt;). Default search finds the first occuring table.
            </summary>
            <typeparam name="THeader">The type of the table header control.</typeparam>
            <typeparam name="TRow">The type of the table row control.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.Table`3.Rows">
            <summary>
            Gets the rows list.
            </summary>
        </member>
        <member name="P:Atata.Table`3.Headers">
            <summary>
            Gets the headers list.
            </summary>
        </member>
        <member name="T:Atata.PasswordInput`1">
            <summary>
            Represents the password input control (&lt;input type="password"&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.ControlNameExpressionStringBuilder.ExpressionToString(System.Linq.Expressions.Expression)">
            <summary>
            Output a given expression tree to a string.
            </summary>
            <param name="node">The expression node.</param>
            <returns>The string representing the expression.</returns>
        </member>
        <member name="M:Atata.ExpressionStringBuilder.ExpressionToString(System.Linq.Expressions.Expression)">
            <summary>
            Output a given expression tree to a string.
            </summary>
            <param name="node">The expession node.</param>
            <returns>The string representing the expression.</returns>
        </member>
        <member name="M:Atata.INavigableExtensions.ClickAndGo``2(Atata.INavigable{``0,``1})">
            <summary>
            Clicks the control and performs the navigation to the page object of <typeparamref name="TNavigateTo"/> type.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <param name="navigableControl">The navigable control.</param>
            <returns>The instance of <typeparamref name="TNavigateTo"/>.</returns>
        </member>
        <member name="T:Atata.TermFindSettingsAttribute">
            <summary>
            Defines the settings to apply for the specified finding strategy of control. Applies to the class (inheritor of <see cref="T:Atata.UIComponent`1"/>) and assembly.
            </summary>
        </member>
        <member name="T:Atata.FindByIdAttribute">
            <summary>
            Specifies that a control should be found by id attribute. Finds the descendant or self control in the scope of the element having the specified id. Uses <c>Kebab</c> as the default term case.
            </summary>
        </member>
        <member name="P:Atata.FindByIdAttribute.DefaultCase">
            <summary>
            Gets the default case. The default value is <c>TermCase.Kebab</c>.
            </summary>
        </member>
        <member name="T:Atata.LogInfoAttribute">
            <summary>
            Defines the information message to be logged on the specified event.
            </summary>
        </member>
        <member name="T:Atata.PressEnterAttribute">
            <summary>
            Specifies the information message to be logged on the defined event. By default occurs after the set.
            </summary>
        </member>
        <member name="T:Atata.TermVerificationTriggerAttribute">
            <summary>
            The base trigger attribute class that can be used in the verification process when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyContentMatchesAttribute">
            <summary>
            Specifies the verification of the page content. Verifies whether the component content matches any of the specified values. By default occurs upon the page object initialization.
            </summary>
        </member>
        <member name="T:Atata.VerifyContentAttribute">
            <summary>
            Specifies the verification of the page content. Verifies whether the component contains the specified content values. By default occurs upon the page object initialization.
            </summary>
        </member>
        <member name="T:Atata.VerifyH1Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h1&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH2Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h2&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH3Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h3&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH4Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h4&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH5Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h5&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="T:Atata.VerifyH6Attribute">
            <summary>
            Indicates the verification of the content of the &lt;h6&gt; tag when the page object is initialized.
            </summary>
        </member>
        <member name="P:Atata.VerifyHeadingTriggerAttribute.Index">
            <summary>
            Gets or sets the index of header. The default value is -1, meaning that the index is not used.
            </summary>
        </member>
        <member name="T:Atata.VerifyTitleAttribute">
            <summary>
            Specifies the verification of the page title. By default occurs upon the page object initialization. If no value is specified, it uses the class name as the expected value with the <c>TermCase.Title</c> casing applied.
            </summary>
        </member>
        <member name="T:Atata.WaitAttribute">
            <summary>
            Specifies the waiting period in seconds. By default occurs after any action.
            </summary>
        </member>
        <member name="P:Atata.FindAttribute.Index">
            <summary>
            Gets or sets the index of the control. The default value is -1, meaning that the index is not used.
            </summary>
        </member>
        <member name="T:Atata.ButtonControl`1">
            <summary>
            Represents the button control. Default search is performed by the content and value (button by content text and input by value attribute). Handles any input element with type="button", type="submit", type="reset" or button element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.ButtonControl`2">
            <summary>
            Represents the button control. Default search is performed by the content and value (button by content text and input by value attribute). Handles any input element with type="button", type="submit", type="reset" or button element.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <seealso cref="T:Atata.ButtonControl`1" />
            <seealso cref="T:Atata.INavigable`2" />
        </member>
        <member name="T:Atata.ClickableControl`2">
            <summary>
            Represents any HTML element. Default search is performed by the id attribute.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <seealso cref="T:Atata.ClickableControl`1" />
        </member>
        <member name="T:Atata.Control`1">
            <summary>
            Represents the base class for controls.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.Control`1.IsEnabled">
            <summary>
            Gets the DataProvider instance for the value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="M:Atata.Control`1.Click">
            <summary>
            Clicks the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="M:Atata.Control`1.Hover">
            <summary>
            Hovers the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="M:Atata.Control`1.Focus">
            <summary>
            Focuses the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="M:Atata.Control`1.DoubleClick">
            <summary>
            Double-clicks the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="M:Atata.Control`1.RightClick">
            <summary>
            Right-clicks the control.
            </summary>
            <returns>The instance of the owner page object.</returns>
        </member>
        <member name="T:Atata.Clickable`1">
            <summary>
            Represents the <see cref="T:Atata.Clickable`1"/> delegate.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.Clickable`1" />
        </member>
        <member name="T:Atata.Clickable`2">
            <summary>
            Represents the <see cref="T:Atata.Clickable`2"/> delegate.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.Clickable`2" />
        </member>
        <member name="T:Atata.Link`1">
            <summary>
            Represents the <see cref="T:Atata.LinkControl`1"/> delegate.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.LinkControl`1" />
        </member>
        <member name="T:Atata.Link`2">
            <summary>
            Represents the <see cref="T:Atata.LinkControl`2"/> delegate.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.LinkControl`2" />
        </member>
        <member name="T:Atata.Button`1">
            <summary>
            Represents the <see cref="T:Atata.ButtonControl`1"/> delegate.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the owner page object.</returns>
            <seealso cref="T:Atata.ButtonControl`1" />
        </member>
        <member name="T:Atata.Button`2">
            <summary>
            Represents the <see cref="T:Atata.ButtonControl`2"/> delegate.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <returns>The instance of the <typeparamref name="TNavigateTo"/> page object.</returns>
            <seealso cref="T:Atata.ButtonControl`2" />
        </member>
        <member name="T:Atata.CheckBoxList`2">
            <summary>
            Represents the checkbox list control (a set of &lt;input type="checkbox"&gt;). Default search is performed by the name. Specified checkbox items can be found by label or value. By default finds the items by the label. Use <see cref="T:Atata.FindItemByValueAttribute"/> to find the items by the value.
            </summary>
            <typeparam name="T">The type of the control's data. Supports only enum types currently.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.CheckBoxList`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Atata.CheckBoxList`2"/> class.
            </summary>
            <exception cref="T:System.InvalidOperationException">generic 'T'  parameter is not an Enum type.</exception>
        </member>
        <member name="M:Atata.CheckBoxList`2.Check(`0)">
            <summary>
            Checks the checkbox by specified value.
            </summary>
            <param name="value">The value of the checkbox.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="M:Atata.CheckBoxList`2.Uncheck(`0)">
            <summary>
            Unchecks the checkbox by specified value.
            </summary>
            <param name="value">The value of the checkbox.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.CheckBox`1">
            <summary>
            Represents the checkbox control (&lt;input type="checkbox"&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.CheckBox`1.IsChecked">
            <summary>
            Gets the <see cref="T:Atata.DataProvider`2" /> instance of the checked state value.
            </summary>
        </member>
        <member name="M:Atata.CheckBox`1.Check">
            <summary>
            Checks the control.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="M:Atata.CheckBox`1.Uncheck">
            <summary>
            Unchecks the control.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.Content`2">
            <summary>
            Represents any HTML element containing content. Default search is performed by the label (if is declared in the class inherited from `TableRow`, then by column header).
            </summary>
            <typeparam name="T">The type of the content.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H1`1">
            <summary>
            Represents the &lt;h1&gt; heading tag. Default search finds the first occuring &lt;h1&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H2`1">
            <summary>
            Represents the &lt;h2&gt; heading tag. Default search finds the first occuring &lt;h2&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H3`1">
            <summary>
            Represents the &lt;h3&gt; heading tag. Default search finds the first occuring &lt;h3&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H4`1">
            <summary>
            Represents the &lt;h4&gt; heading tag. Default search finds the first occuring &lt;h4&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H5`1">
            <summary>
            Represents the &lt;h5&gt; heading tag. Default search finds the first occuring &lt;h5&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.H6`1">
            <summary>
            Represents the &lt;h6&gt; heading tag. Default search finds the first occuring &lt;h6&gt; element.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.DateInput`1">
            <summary>
            Represents the date input control. Default search is performed by the label. The default format is "d" (short date pattern, e.g. 6/15/2009). Handles any input element with type="date", type="text" or without the defined type attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.EditableField`2">
            <summary>
            Represents the base class for the editable field controls.
            </summary>
            <typeparam name="T">The type of the control's data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.RadioButtonList`2">
            <summary>
            Represents the radio button list control (a set of &lt;input type="radio"&gt;). Default search is performed by the name. Specified radio button items can be found by label or value. By default finds the items by the label. Use <see cref="T:Atata.FindItemByValueAttribute"/> to find the items by the value.
            </summary>
            <typeparam name="T">The type of the control's data. Supports string, enum types, numeric types and others.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.RadioButton`1">
            <summary>
            Represents the radio button control (&lt;input type="radio"&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.RadioButton`1.IsChecked">
            <summary>
            Gets the <see cref="T:Atata.DataProvider`2" /> instance of the checked state value.
            </summary>
        </member>
        <member name="M:Atata.RadioButton`1.Check">
            <summary>
            Checks the control.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.Input`2">
            <summary>
            Represents the input control (&lt;input&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="T">The type of the control's data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="M:Atata.Input`2.Append(System.String)">
            <summary>
            Appends the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The owner page object.</returns>
        </member>
        <member name="M:Atata.Input`2.Clear">
            <summary>
            Clears the value.
            </summary>
            <returns>The owner page object.</returns>
        </member>
        <member name="T:Atata.TextArea`1">
            <summary>
            Represents the text area control (&lt;textarea&gt;). Default search is performed by the label.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.TimeInput`1">
            <summary>
            Represents the time input control. Default search is performed by the label. Handles any input element with type="time", type="text" or without the defined type attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.LinkControl`1">
            <summary>
            Represents the link control (&lt;a&gt;). Default search is performed by the content.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.LinkControl`2">
            <summary>
            Represents the link control (&lt;a&gt;). Default search is performed by the content.
            </summary>
            <typeparam name="TNavigateTo">The type of the page object to navigate to.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <seealso cref="T:Atata.LinkControl`1" />
        </member>
        <member name="T:Atata.AtataContext">
            <summary>
            Represents the Atata context, the entry point for the test set-up.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.Current">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.BuildStart">
            <summary>
            Gets the build start date and time. Contains the same value for all the tests being executed within one build.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.Driver">
            <summary>
            Gets the driver.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.Log">
            <summary>
            Gets the instance of the log manager.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.TestName">
            <summary>
            Gets the name of the test.
            </summary>
        </member>
        <member name="P:Atata.AtataContext.TestStart">
            <summary>
            Gets the test start date and time.
            </summary>
        </member>
        <member name="M:Atata.AtataContext.CleanUp(System.Boolean)">
            <summary>
            Cleans up the test context.
            </summary>
            <param name="quitDriver">if set to <c>true</c> quits WebDriver.</param>
        </member>
        <member name="M:Atata.AtataContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Atata.Table`2">
            <summary>
            Represents the table control (&lt;table&gt;). Default search finds the first occuring table.
            </summary>
            <typeparam name="TRow">The type of the table row control.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Text`1">
            <summary>
            Represents any element containing text content. Default search is performed by the label (if is declared in the class inherited from `TableRow`, then by column header).
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Page`1">
            <summary>
            Represents the whole HTML page and is the main base class to inherit for the pages. Uses the body tag as a scope.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
            <seealso cref="T:Atata.PageObject`1" />
        </member>
        <member name="T:Atata.PopupWindow`1">
            <summary>
            Represents the base class for the popup window page objects.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.PopupWindow`1.WindowTitleValues">
            <summary>
            Gets or sets the window title values.
            </summary>
        </member>
        <member name="P:Atata.PopupWindow`1.WindowTitleMatch">
            <summary>
            Gets or sets the match that should be used for the window search by the title. The default value is <c>TermMatch.Equals</c>.
            </summary>
        </member>
        <member name="P:Atata.PopupWindow`1.CanFindByWindowTitle">
            <summary>
            Gets a value indicating whether window can be found by window title.
            </summary>
        </member>
        <member name="T:Atata.ClickableControl`1">
            <summary>
            Represents any HTML element. Default search is performed by the id attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Select`2">
            <summary>
            Represents the select control (&lt;select&gt;). Property can be marked with <see cref="T:Atata.SelectByValueAttribute"/> or <see cref="T:Atata.SelectByTextAttribute"/>. Default selection is performed by text.
            </summary>
            <typeparam name="T">The type of the data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.UIComponent">
            <summary>
            Represents the base class for UI components.
            </summary>
        </member>
        <member name="P:Atata.UIComponent.Parent">
            <summary>
            Gets the parent component.
            </summary>
        </member>
        <member name="P:Atata.UIComponent.Attributes">
            <summary>
            Gets the scope element's attributes.
            </summary>
        </member>
        <member name="P:Atata.UIComponent.Css">
            <summary>
            Gets the scope element's CSS properties.
            </summary>
        </member>
        <member name="M:Atata.UIComponent.Exists(Atata.SearchOptions)">
            <summary>
            Determines whether the component exists.
            </summary>
            <param name="options">The options. If set to null, then it uses <c>SearchOptions.Safely()</c>.</param>
            <returns>true if the component exists; otherwise, false.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException">The <paramref name="options"/> has IsSafely property equal to false value and the component doesn't exist.</exception>
        </member>
        <member name="M:Atata.UIComponent.Missing(Atata.SearchOptions)">
            <summary>
            Determines whether the component is missing.
            </summary>
            <param name="options">The options. If set to null, then it uses <c>SearchOptions.Safely()</c>.</param>
            <returns>true if the component is missing; otherwise, false.</returns>
            <exception cref="T:Atata.NotMissingElementException">The <paramref name="options"/> has IsSafely property equal to false value and the component exists.</exception>
        </member>
        <member name="T:Atata.UIComponent`1">
            <summary>
            Represents the base class for UI components.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.UIComponent`1.Content">
            <summary>
            Gets the DataProvider instance for the text content.
            </summary>
        </member>
        <member name="P:Atata.UIComponent`1.Should">
            <summary>
            Gets the verification provider that gives a set of verification extension methods.
            </summary>
        </member>
        <member name="T:Atata.Table`1">
            <summary>
            Represents the table control (&lt;table&gt;). Default search finds the first occuring table.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.NumberInput`1">
            <summary>
            Represents the number input control. Default search is performed by the label. Handles any input element with type="number", type="tel", type="text" or without the defined type attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Field`2">
            <summary>
            Represents the base class for the field controls.
            </summary>
            <typeparam name="T">The type of the control's data.</typeparam>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.Select`1">
            <summary>
            Represents the select control (&lt;select&gt;). Selects an option using string. Property can be marked with <see cref="T:Atata.SelectByValueAttribute"/> or <see cref="T:Atata.SelectByTextAttribute"/>. Default selection is performed by text.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="T:Atata.PageObject`1">
            <summary>
            Represents the base class for the page objects.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
        <member name="P:Atata.PageObject`1.PageTitle">
            <summary>
            Gets the DataProvider instance for the title of the current HTML page.
            </summary>
        </member>
        <member name="P:Atata.PageObject`1.PageUrl">
            <summary>
            Gets the DataProvider instance for the URL of the current HTML page.
            </summary>
        </member>
        <member name="M:Atata.PageObject`1.RefreshPage">
            <summary>
            Refreshes the current page.
            </summary>
            <returns>The instance of this page object.</returns>
        </member>
        <member name="M:Atata.PageObject`1.GoBack``1(``0)">
            <summary>
            Navigates back to the previous page.
            </summary>
            <typeparam name="TOther">The type of the page object that represents the previous page.</typeparam>
            <param name="previousPageObject">The instance of the previous page object. If equals null, creates an instance of <typeparamref name="TOther"/> using the default constructor.</param>
            <returns>
            The instance of the previous page object.
            </returns>
        </member>
        <member name="M:Atata.PageObject`1.GoForward``1(``0)">
            <summary>
            Navigates forward to the next page.
            </summary>
            <typeparam name="TOther">The type of the page object that represents the next page.</typeparam>
            <param name="nextPageObject">The instance of the next page object. If equals null, creates an instance of <typeparamref name="TOther"/> using the default constructor.</param>
            <returns>
            The instance of the next page object.
            </returns>
        </member>
        <member name="M:Atata.PageObject`1.CloseWindow">
            <summary>
            Closes the current window.
            </summary>
        </member>
        <member name="T:Atata.TriggerPriority">
            <summary>
            Specifies the priority of trigger execution.
            </summary>
        </member>
        <member name="T:Atata.TriggerScope">
            <summary>
            Specifies the scope of trigger application.
            </summary>
        </member>
        <member name="F:Atata.TriggerScope.Self">
            <summary>
            Indicates that the trigger applies to the class/member declared.
            </summary>
        </member>
        <member name="F:Atata.TriggerScope.Children">
            <summary>
            Indicates that the trigger applies to the child control properties.
            </summary>
        </member>
        <member name="T:Atata.TermCase">
            <summary>
            Specifies the term case.
            </summary>
        </member>
        <member name="F:Atata.TermCase.Inherit">
            <summary>
            Uses the inherited case or none if missing.
            </summary>
        </member>
        <member name="F:Atata.TermCase.None">
            <summary>
            Doesn't apply the case.
            </summary>
        </member>
        <member name="F:Atata.TermCase.Title">
            <summary>
            Uses title case (e.g. "Some Term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.TitleWithColon">
            <summary>
            Uses title case with colon (':') ending (e.g. "Some Term:").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Sentence">
            <summary>
            Uses sentence case (e.g. "Some term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.MidSentence">
            <summary>
            Uses mid-sentence case where the first word is not capitalised (e.g. "some term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.SentenceWithColon">
            <summary>
            Uses sentence case with colon (':') ending (e.g. "Some term:").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Lower">
            <summary>
            Uses lower case (e.g. "some term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.LowerMerged">
            <summary>
            Uses lower case with words merging (e.g. "someterm").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Upper">
            <summary>
            Uses upper case (e.g. "SOME TERM").
            </summary>
        </member>
        <member name="F:Atata.TermCase.UpperMerged">
            <summary>
            Uses upper case with words merging (e.g. "SOMETERM").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Camel">
            <summary>
            Uses camel case (e.g. "someTerm").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Pascal">
            <summary>
            Uses pascal case (e.g. "SomeTerm").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Kebab">
            <summary>
            Uses dash ('-') and lower case (e.g. "some-term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.HyphenKebab">
            <summary>
            Uses hyphen ('‐') and lower case (e.g. "some‐term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.PascalKebab">
            <summary>
            Uses dash ('-') and pascal case (e.g. "Some-Term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.PascalHyphenKebab">
            <summary>
            Uses hyphen ('‐') and pascal case (e.g. "Some‐Term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.XKebab">
            <summary>
            Uses dash ('-'), lower case and "x-" prefix (e.g. "x-some-term").
            </summary>
        </member>
        <member name="F:Atata.TermCase.Snake">
            <summary>
            Uses undersore ('_') and lower case (e.g. "some_term").
            </summary>
        </member>
        <member name="T:Atata.TermMatch">
            <summary>
            Specifies the match approach for the term finding.
            </summary>
        </member>
        <member name="F:Atata.TermMatch.Inherit">
            <summary>
            Uses inherited match or none if missing.
            </summary>
        </member>
        <member name="T:Atata.TextInput`1">
            <summary>
            Represents the text input control (&lt;input type="text"&gt;). Default search is performed by the label. Handles any input element with type="text" or without the defined type attribute.
            </summary>
            <typeparam name="TOwner">The type of the owner page object.</typeparam>
        </member>
    </members>
</doc>
